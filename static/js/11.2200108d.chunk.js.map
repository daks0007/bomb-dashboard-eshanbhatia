{"version":3,"sources":["components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","components/CardIcon/CardIcon.tsx","components/Value/Value.tsx","components/Icon/Icon.tsx","components/icons/AddIcon.tsx","components/icons/RemoveIcon.tsx","components/IconButton/IconButton.tsx","components/Spacer/Spacer.tsx","hooks/useLpStats.ts","hooks/useZap.ts","hooks/useStakedTokenPriceInDollars.ts","hooks/useApproveZapper.ts","views/Bank/components/ZapModal.tsx","components/PageHeader/PageHeader.tsx","../node_modules/@material-ui/icons/FlashOn.js","views/Bank/components/Harvest.tsx","hooks/useStake.ts","hooks/useWithdraw.ts","views/Bank/components/DepositModal.tsx","views/Bank/components/WithdrawModal.tsx","views/Bank/components/Stake.tsx","hooks/useBank.ts","views/Bank/Bank.tsx","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","views/Farm/FarmCard.js","views/Farm/Farm.js"],"names":["StyledInputWrapper","styled","div","props","theme","color","grey","borderRadius","spacing","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","TokenInput","max","symbol","onSelectMax","toLocaleString","Button","size","variant","onClick","StyledModalActions","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledCardIcon","CardIcon","StyledValue","Value","StyledIcon","Icon","AddIcon","themeColor","useContext","ThemeContext","height","viewBox","width","d","fill","RemoveIcon","StyledButton","button","disabled","undefined","StyledLink","Link","IconButton","to","Spacer","s","useLpStats","lpTicker","useState","stat","setStat","slowRefresh","useRefresh","bombFinance","useBombFinance","useEffect","a","getLPStat","console","error","fetchLpPrice","useZap","bank","handleTransactionReceipt","useHandleTransactionReceipt","onZap","useCallback","zappingToken","tokenName","amount","zapIn","depositTokenName","useStakedTokenPriceInDollars","stakedTokenName","stakedToken","stakedTokenPriceInDollars","setStakedTokenPriceInDollars","isUnlocked","fetchBalance","getDepositTokenPriceInDollars","balance","catch","err","stack","refreshStakedTokenPriceInDollars","setInterval","config","refreshInterval","clearInterval","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","from","useApproveZapper","token","BNB_TICKER","BNB","BOMB_TICKER","BOMB","BSHARE_TICKER","BSHARE","BTC_TICKER","externalTokens","pendingApproval","useHasPendingApproval","address","ZAPPER_ROUTER_ADDR","currentAllowance","useAllowance","approvalState","useMemo","APPROVED","lt","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","response","summary","approval","tokenAddress","spender","StyledActionSpacer","StyledDescriptionText","StyledMenuItem","withStyles","root","backgroundColor","selected","MenuItem","ZapModal","onConfirm","onDismiss","decimals","useWallet","ftmBalance","Number","toFixed","toString","bombBalance","useTokenBalance","bshareBalance","btcBalance","BTC","val","setVal","setZappingToken","zappingTokenBalance","setZappingTokenBalance","token0","token1","estimate","setEstimate","approveZapperStatus","approveZapper","bombFtmLpStats","tShareFtmLpStats","bombLPStats","bshareLPStats","ftmAmountPerLP","startsWith","ftmAmount","handleChange","e","currentTarget","n","isNaN","parseFloat","isFinite","estimateZapIn","String","estimateZap","handleSelectMax","Modal","ModalTitle","text","InputLabel","style","id","Select","event","target","getDisplayBalance","labelId","Label","Alert","severity","StyledPageHeader","StyledTitle","h1","StyledSubtitle","h3","PageHeader","icon","subtitle","title","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","StyledCardHeader","StyledCardActions","StyledCardContentInner","Harvest","earnings","useEarnings","contract","earnTokenName","poolId","onReward","useHarvest","bombStats","useBombStats","tShareStats","useShareStats","tokenStats","tokenPriceInDollars","priceInDollars","earnedInDollars","Card","CardContent","TokenSymbol","earnToken","Typography","textTransform","eq","className","useStake","onStake","amountBn","parseUnits","depositToken","decimal","stake","useWithdraw","onWithdraw","unstake","DepositModal","fullBalance","getFullDisplayBalance","WithdrawModal","Stake","log","useApprove","approveStatus","tokenBalance","stakedBalance","useStakedBalance","useModal","onDismissDeposit","onPresentDeposit","onDissmissZap","onPresentZap","onDismissWithdraw","onPresentWithdraw","closedForStaking","marginTop","useBank","contractName","BanksContext","banks","find","useStyles","makeStyles","gridItem","breakpoints","up","LPTokenHelpText","pairName","uniswapUrl","bombAddr","bshareAddr","busmAddr","BUSM","busdAddr","BUSD","includes","href","BankNotFound","Center","StyledBank","primary","main","StyledCardsWrapper","StyledCardWrapper","Bank","window","scrollTo","vaultUrl","classes","bankId","useParams","account","onRedeem","useRedeem","statsOnPool","useStatsForPool","name","Box","mt","Grid","container","justify","marginBottom","item","xs","md","lg","textAlign","yearlyAPR","dailyAPR","TVL","UnlockWallet","CardActions","ref","_props$disableSpacing","disableSpacing","other","_objectWithoutProperties","_extends","clsx","display","alignItems","padding","marginLeft","FarmCard","toUpperCase","position","right","top","justifyContent","component","BackgroundImage","createGlobalStyle","HomeImage","Farm","useBanks","path","useRouteMatch","activeBanks","filter","finished","Page","exact","Helmet","Container","maxWidth","align","gutterBottom","hidden","sectionInUI","Fragment","key"],"mappings":"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","file":"static/js/11.2200108d.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  startAdornment?: React.ReactNode;\n  value: string;\n}\n\nconst Input: React.FC<InputProps> = ({endAdornment, onChange, placeholder, startAdornment, value}) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  );\n};\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[200]};\n  border-radius: ${(props) => props.theme.borderRadius}px;\n  display: flex;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledInput = styled.input`\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.color.grey[600]};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Button} from '@material-ui/core';\nimport Input, {InputProps} from '../Input';\n\ninterface TokenInputProps extends InputProps {\n  max: number | string;\n  symbol: string;\n  onSelectMax?: () => void;\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({max, symbol, onChange, onSelectMax, value}) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} Available\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\n            <StyledSpacer />\n            <div>\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  );\n};\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`;\n\nexport default TokenInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalActions: React.FC = ({children}) => {\n  const l = React.Children.toArray(children).length;\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <StyledSpacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  );\n};\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[100]}00;\n  display: flex;\n  height: 96px;\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\n    ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ModalActions;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface CardIconProps {\n  children?: React.ReactNode;\n}\n\nconst CardIcon: React.FC<CardIconProps> = ({children}) => <StyledCardIcon>{children}</StyledCardIcon>;\n\nconst StyledCardIcon = styled.div`\n  background-color: #363746;\n  font-size: 36px;\n  height: 95px;\n  width: 95px;\n  border-radius: 95px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto ${(props) => props.theme.spacing[3]}px;\n`;\n\nexport default CardIcon;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\ninterface ValueProps {\n  value: string;\n}\n\nconst Value: React.FC<ValueProps> = ({value}) => {\n  return <StyledValue>{value}</StyledValue>;\n};\n\nconst StyledValue = styled.div`\n  font-size: 36px;\n  font-weight: 700;\n`;\n\nexport default Value;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface IconProps {\n  color?: string;\n  children?: string;\n}\n\nconst Icon: React.FC = ({children}) => <StyledIcon>{children}</StyledIcon>;\n\nconst StyledIcon = styled.div``;\n\nexport default Icon;\n","import React, {useContext} from 'react';\nimport {ThemeContext} from 'styled-components';\n\nimport Icon, {IconProps} from '../Icon';\n\nconst AddIcon: React.FC<IconProps> = ({color}) => {\n  const {color: themeColor} = useContext(ThemeContext);\n  return (\n    <Icon>\n      <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" fill={color ? color : themeColor.grey[400]} />\n      </svg>\n    </Icon>\n  );\n};\n\nexport default AddIcon;\n","import React, {useContext} from 'react';\nimport {ThemeContext} from 'styled-components';\n\nimport Icon, {IconProps} from '../Icon';\n\nconst RemoveIcon: React.FC<IconProps> = ({color}) => {\n  const {color: themeColor} = useContext(ThemeContext);\n  return (\n    <Icon>\n      <svg viewBox=\"0 0 24 24\" fill={color ? color : themeColor.grey[400]} width=\"18px\" height=\"18px\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 13H5v-2h14v2z\" />\n      </svg>\n    </Icon>\n  );\n};\n\nexport default RemoveIcon;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Link} from 'react-router-dom';\n\ninterface IconButtonProps {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  onClick?: () => void;\n  to?: string;\n}\n\nconst IconButton: React.FC<IconButtonProps> = ({children, disabled, onClick, to}) => {\n  return (\n    <StyledButton disabled={disabled} onClick={onClick}>\n      {!!to ? <StyledLink to={to}>{children}</StyledLink> : children}\n    </StyledButton>\n  );\n};\n\ninterface StyledButtonProps {\n  disabled?: boolean;\n}\n/*\n  box-shadow: 6px 6px 12px ${props => props.theme.color.grey[600]},\n    -12px -12px 24px ${props => props.theme.color.grey[800]}aa;\n */\n\n// background-color: ${(props) => (!props.disabled ? '#571eb1' : props.theme.color.grey[900])};\n// color: ${(props) => (!props.disabled ? props.theme.color.primary.main : props.theme.color.grey[500])};\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  border: 2px solid;\n  border-radius: 28px;\n  background-color: #171923;\n  box-shadow: ${(props) => ('0px 0px 5px 0px ' + !props.disabled ? 'rgba(251,221,76,1)' : 'grey' )};\n  color: ${(props) => (!props.disabled ? '#f9d749' : 'grey')};\n  cursor: pointer;\n  display: flex;\n  font-weight: 700;\n  height: 56px;\n  justify-content: center;\n  letter-spacing: 1px;\n  outline: none;\n  padding: 0;\n  margin: 0;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  text-transform: uppercase;\n  width: 56px;\n\n  &:hover {\n    background-color: #f9d749;\n    color: #171923;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default IconButton;\n","import React, {useContext} from 'react';\nimport styled, {ThemeContext} from 'styled-components';\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst Spacer: React.FC<SpacerProps> = ({size = 'md'}) => {\n  const {spacing} = useContext(ThemeContext);\n\n  let s: number;\n  switch (size) {\n    case 'lg':\n      s = spacing[6];\n      break;\n    case 'sm':\n      s = spacing[2];\n      break;\n    case 'md':\n    default:\n      s = spacing[4];\n  }\n\n  return <StyledSpacer size={s} />;\n};\n\ninterface StyledSpacerProps {\n  size: number;\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`;\n\nexport default Spacer;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {LPStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useLpStats = (lpTicker: string) => {\n  const [stat, setStat] = useState<LPStat>();\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchLpPrice() {\n      try {\n        setStat(await bombFinance.getLPStat(lpTicker));\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchLpPrice();\n  }, [setStat, bombFinance, slowRefresh, lpTicker]);\n\n  return stat;\n};\n\nexport default useLpStats;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useZap = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleZap = useCallback(\n    (zappingToken: string, tokenName: string, amount: string) => {\n      handleTransactionReceipt(\n        bombFinance.zapIn(zappingToken, tokenName, amount),\n        `Zap ${amount} in ${bank.depositTokenName}.`,\n      );\n    },\n    [bank, bombFinance, handleTransactionReceipt],\n  );\n  return {onZap: handleZap};\n};\n\nexport default useZap;\n","import {useCallback, useEffect, useState} from 'react';\n\nimport useBombFinance from './useBombFinance';\nimport config from '../config';\nimport ERC20 from '../bomb-finance/ERC20';\n\nconst useStakedTokenPriceInDollars = (stakedTokenName: string, stakedToken: ERC20) => {\n  const [stakedTokenPriceInDollars, setStakedTokenPriceInDollars] = useState('0');\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await bombFinance.getDepositTokenPriceInDollars(stakedTokenName, stakedToken);\n    setStakedTokenPriceInDollars(balance);\n  }, [stakedToken, stakedTokenName, bombFinance]);\n\n  useEffect(() => {\n    if (isUnlocked) {\n      fetchBalance().catch((err) => console.error(err.stack));\n\n      const refreshStakedTokenPriceInDollars = setInterval(fetchBalance, config.refreshInterval);\n      return () => clearInterval(refreshStakedTokenPriceInDollars);\n    }\n  }, [isUnlocked, setStakedTokenPriceInDollars, bombFinance, fetchBalance]);\n\n  return stakedTokenPriceInDollars;\n};\n\nexport default useStakedTokenPriceInDollars;\n","import {BigNumber, ethers} from 'ethers';\nimport {useCallback, useMemo} from 'react';\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\nimport useAllowance from './useAllowance';\nimport ERC20 from '../bomb-finance/ERC20';\nimport {BNB_TICKER, BOMB_TICKER, BSHARE_TICKER, BTC_TICKER, ZAPPER_ROUTER_ADDR} from '../utils/constants';\nimport useBombFinance from './useBombFinance';\n\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nfunction useApproveZapper(zappingToken: string): [ApprovalState, () => Promise<void>] {\n  const bombFinance = useBombFinance();\n  let token: ERC20;\n  if (zappingToken === BNB_TICKER) token = bombFinance.BNB;\n  else if (zappingToken === BOMB_TICKER) token = bombFinance.BOMB;\n  else if (zappingToken === BSHARE_TICKER) token = bombFinance.BSHARE;\n  else if (zappingToken === BTC_TICKER) token = bombFinance.externalTokens[BTC_TICKER];\n  const pendingApproval = useHasPendingApproval(token.address, ZAPPER_ROUTER_ADDR);\n  const currentAllowance = useAllowance(token, ZAPPER_ROUTER_ADDR, pendingApproval);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    // we might not have enough data to know whether or not we need to approve\n    if (token === bombFinance.BNB) return ApprovalState.APPROVED;\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [currentAllowance, pendingApproval, token, bombFinance]);\n\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n\n    const response = await token.approve(ZAPPER_ROUTER_ADDR, APPROVE_AMOUNT);\n    addTransaction(response, {\n      summary: `Approve ${token.symbol}`,\n      approval: {\n        tokenAddress: token.address,\n        spender: ZAPPER_ROUTER_ADDR,\n      },\n    });\n  }, [approvalState, token, addTransaction]);\n\n  return [approvalState, approve];\n}\n\nexport default useApproveZapper;\n","import React, {useState, useMemo} from 'react';\n\nimport {Button, Select, MenuItem, InputLabel, withStyles} from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport styled from 'styled-components';\n\nimport {getDisplayBalance} from '../../../utils/formatBalance';\nimport Label from '../../../components/Label';\nimport useLpStats from '../../../hooks/useLpStats';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useBombFinance from '../../../hooks/useBombFinance';\nimport {useWallet} from 'use-wallet';\nimport useApproveZapper, {ApprovalState} from '../../../hooks/useApproveZapper';\nimport {BOMB_TICKER, BSHARE_TICKER, BNB_TICKER, BTC_TICKER} from '../../../utils/constants';\nimport {Alert} from '@material-ui/lab';\n\ninterface ZapProps extends ModalProps {\n  onConfirm: (zapAsset: string, lpName: string, amount: string) => void;\n  tokenName?: string;\n  decimals?: number;\n}\n\nconst ZapModal: React.FC<ZapProps> = ({onConfirm, onDismiss, tokenName = '', decimals = 18}) => {\n  const bombFinance = useBombFinance();\n  const {balance} = useWallet();\n  const ftmBalance = (Number(balance) / 1e18).toFixed(4).toString();\n  const bombBalance = useTokenBalance(bombFinance.BOMB);\n  const bshareBalance = useTokenBalance(bombFinance.BSHARE);\n  const btcBalance = useTokenBalance(bombFinance.BTC);\n  const [val, setVal] = useState('');\n  const [zappingToken, setZappingToken] = useState(BNB_TICKER);\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(ftmBalance);\n  const [estimate, setEstimate] = useState({token0: '0', token1: '0'}); // token0 will always be BNB in this case\n  const [approveZapperStatus, approveZapper] = useApproveZapper(zappingToken);\n  const bombFtmLpStats = useLpStats('BOMB-BTCB-LP');\n  const tShareFtmLpStats = useLpStats('BSHARE-BNB-LP');\n  const bombLPStats = useMemo(() => (bombFtmLpStats ? bombFtmLpStats : null), [bombFtmLpStats]);\n  const bshareLPStats = useMemo(() => (tShareFtmLpStats ? tShareFtmLpStats : null), [tShareFtmLpStats]);\n  const ftmAmountPerLP = tokenName.startsWith(BOMB_TICKER) ? bombLPStats?.ftmAmount : bshareLPStats?.ftmAmount;\n  /**\n   * Checks if a value is a valid number or not\n   * @param n is the value to be evaluated for a number\n   * @returns\n   */\n  function isNumeric(n: any) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  const handleChangeAsset = (event: any) => {\n    const value = event.target.value;\n    setZappingToken(value);\n    setZappingTokenBalance(ftmBalance);\n    if (event.target.value === BSHARE_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bshareBalance, decimals));\n    }\n    if (event.target.value === BOMB_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bombBalance, decimals));\n    }\n    if (event.target.value === BTC_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(btcBalance, decimals));\n    }\n  };\n\n  const handleChange = async (e: any) => {\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\n      setVal(e.currentTarget.value);\n      setEstimate({token0: '0', token1: '0'});\n    }\n    if (!isNumeric(e.currentTarget.value)) return;\n    setVal(e.currentTarget.value);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(e.currentTarget.value));\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\n  };\n\n  const handleSelectMax = async () => {\n    setVal(zappingTokenBalance);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(zappingTokenBalance));\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\n  };\n\n  return (\n    <Modal>\n      <ModalTitle text={`Zap in ${tokenName}`} />\n\n      <StyledActionSpacer />\n      <InputLabel style={{color: '#2c2560'}} id=\"label\">\n        Select asset to zap with\n      </InputLabel>\n      <Select onChange={handleChangeAsset} style={{color: '#2c2560'}} labelId=\"label\" id=\"select\" value={zappingToken}>\n        <StyledMenuItem value={BNB_TICKER}>BNB</StyledMenuItem>\n        <StyledMenuItem value={BSHARE_TICKER}>BSHARE</StyledMenuItem>\n        {/* <StyledMenuItem value={BTC_TICKER}>BTC</StyledMenuItem> */}\n        {/* Bomb as an input for zapping will be disabled due to issues occuring with the Gatekeeper system */}\n        {/* <StyledMenuItem value={BOMB_TICKER}>BOMB</StyledMenuItem> */}\n      </Select>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={zappingTokenBalance}\n        symbol={zappingToken}\n      />\n      <Label text=\"Zap Estimations\" />\n      <StyledDescriptionText>\n        {' '}\n        {tokenName}: {Number(estimate.token0) / Number(ftmAmountPerLP)}\n      </StyledDescriptionText>\n      <StyledDescriptionText>\n        {' '}\n        ({Number(estimate.token0)} {tokenName.startsWith(BSHARE_TICKER) ? BSHARE_TICKER : BNB_TICKER} /{' '}\n        {Number(estimate.token1)} {tokenName.startsWith(BSHARE_TICKER) ? BNB_TICKER : BSHARE_TICKER}){' '}\n      </StyledDescriptionText>\n      <ModalActions>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() =>\n            approveZapperStatus !== ApprovalState.APPROVED ? approveZapper() : onConfirm(zappingToken, tokenName, val)\n          }\n        >\n          {approveZapperStatus !== ApprovalState.APPROVED ? 'Approve' : \"Let's go\"}\n        </Button>\n      </ModalActions>\n\n      <StyledActionSpacer />\n      <Alert variant=\"filled\" severity=\"info\">\n        New feature. Use at your own risk!\n      </Alert>\n    </Modal>\n  );\n};\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledDescriptionText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 22px;\n  justify-content: flex-start;\n`;\nconst StyledMenuItem = withStyles({\n  root: {\n    backgroundColor: 'white',\n    color: '#2c2560',\n    '&:hover': {\n      backgroundColor: 'grey',\n      color: '#2c2560',\n    },\n    selected: {\n      backgroundColor: 'black',\n    },\n  },\n})(MenuItem);\n\nexport default ZapModal;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface PageHeaderProps {\n  icon: React.ReactNode;\n  subtitle?: string;\n  title?: string;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({icon, subtitle, title}) => {\n  return (\n    <StyledPageHeader>\n      {/* <StyledIcon>{icon}</StyledIcon> */}\n      <StyledTitle>{title}</StyledTitle>\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\n    </StyledPageHeader>\n  );\n};\n\nconst StyledPageHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\n  padding-top: ${(props) => props.theme.spacing[6]}px;\n  max-width: 512px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst StyledTitle = styled.h1`\n  color: '#f9d749';\n  font-size: 36px;\n  font-weight: 700;\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledSubtitle = styled.h3`\n  color: ${(props) => props.theme.color.grey[400]};\n  font-size: 18px;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n`;\n\nexport default PageHeader;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 2v11h3v9l7-12h-4l4-8z\"\n}), 'FlashOn');\n\nexports.default = _default;","import React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {Button, Card, CardContent, Typography} from '@material-ui/core';\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport Value from '../../../components/Value';\nimport useEarnings from '../../../hooks/useEarnings';\nimport useHarvest from '../../../hooks/useHarvest';\n\nimport {getDisplayBalance} from '../../../utils/formatBalance';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport {Bank} from '../../../bomb-finance';\nimport useBombStats from '../../../hooks/useBombStats';\nimport useShareStats from '../../../hooks/usebShareStats';\n\ninterface HarvestProps {\n  bank: Bank;\n}\n\nconst Harvest: React.FC<HarvestProps> = ({bank}) => {\n  const earnings = useEarnings(bank.contract, bank.earnTokenName, bank.poolId);\n  const {onReward} = useHarvest(bank);\n  const bombStats = useBombStats();\n  const tShareStats = useShareStats();\n\n  const tokenName = bank.earnTokenName === 'BSHARE' ? 'BSHARE' : 'BOMB';\n  const tokenStats = bank.earnTokenName === 'BSHARE' ? tShareStats : bombStats;\n  const tokenPriceInDollars = useMemo(\n    () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\n    [tokenStats],\n  );\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <CardIcon>\n              <TokenSymbol symbol={bank.earnToken.symbol} />\n            </CardIcon>\n            <Value value={getDisplayBalance(earnings)} />\n                          <Typography style={{textTransform: 'uppercase', color: '#fffff'}}>\n                      {`≈ $${earnedInDollars}`}\n                    </Typography>\n            {/* <Label text={`≈ $${earnedInDollars}`} /> */}\n                  <Typography style={{textTransform: 'uppercase', color: '#f9d749'}}>\n              {`${tokenName} Earned`}\n                    </Typography>\n             {/* <Label text={`${tokenName} Earned`} /> */}\n          </StyledCardHeader>\n          <StyledCardActions>\n            <Button\n              onClick={onReward}\n              disabled={earnings.eq(0)}\n              className={earnings.eq(0) ? 'shinyButtonDisabled' : 'shinyButton'}\n            >\n              Claim\n            </Button>\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Harvest;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\nimport {parseUnits} from 'ethers/lib/utils';\n\nconst useStake = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleStake = useCallback(\n    (amount: string) => {\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\n      handleTransactionReceipt(\n        bombFinance.stake(bank.contract, bank.poolId, amountBn),\n        `Stake ${amount} ${bank.depositTokenName} to ${bank.contract}`,\n      );\n    },\n    [bank, bombFinance, handleTransactionReceipt],\n  );\n  return {onStake: handleStake};\n};\n\nexport default useStake;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\nimport {parseUnits} from 'ethers/lib/utils';\n\nconst useWithdraw = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleWithdraw = useCallback(\n    (amount: string) => {\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\n      handleTransactionReceipt(\n        bombFinance.unstake(bank.contract, bank.poolId, amountBn),\n        `Withdraw ${amount} ${bank.depositTokenName} from ${bank.contract}`,\n      );\n    },\n    [bank, bombFinance, handleTransactionReceipt],\n  );\n  return {onWithdraw: handleWithdraw};\n};\n\nexport default useWithdraw;\n","import React, {useCallback, useMemo, useState} from 'react';\n\nimport {Button} from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\n\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\nimport {BigNumber} from 'ethers';\n\ninterface DepositModalProps extends ModalProps {\n  max: BigNumber;\n  decimals: number;\n  onConfirm: (amount: string) => void;\n  tokenName?: string;\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({max, decimals, onConfirm, onDismiss, tokenName = ''}) => {\n  const [val, setVal] = useState('');\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals, false);\n  }, [max, decimals]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value);\n    },\n    [setVal],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={`Deposit ${tokenName}`} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        {/* <Button color=\"secondary\" variant=\"outlined\" onClick={onDismiss}>Cancel</Button> */}\n        <Button className=\"shinyButtonSecondary\" onClick={() => onConfirm(val)}>\n          Confirm\n        </Button>\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default DepositModal;\n","import React, {useCallback, useMemo, useState} from 'react';\n\nimport {Button} from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\n\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\nimport {BigNumber} from 'ethers';\n\ninterface WithdrawModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  tokenName?: string;\n  decimals?: number;\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({onConfirm, onDismiss, max, tokenName = '', decimals = 18}) => {\n  const [val, setVal] = useState('');\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals, false);\n  }, [max, decimals]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value);\n    },\n    [setVal],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={`Withdraw ${tokenName}`} />\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button className=\"shinyButtonSecondary\" onClick={() => onConfirm(val)}>\n          Confirm\n        </Button>\n        {/* <Button color=\"secondary\" onClick={onDismiss}>Cancel</Button> */}\n\n        {/* <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} /> */}\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default WithdrawModal;\n","import React, { useMemo, useContext } from 'react';\nimport styled from 'styled-components';\n\n// import Button from '../../../components/Button';\nimport { Button, Card, CardContent, Typography } from '@material-ui/core';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport IconButton from '../../../components/IconButton';\n//import Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport { ThemeContext } from 'styled-components';\n\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useStake from '../../../hooks/useStake';\nimport useZap from '../../../hooks/useZap';\n\nimport useStakedBalance from '../../../hooks/useStakedBalance';\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdraw from '../../../hooks/useWithdraw';\n\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport ZapModal from './ZapModal';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport { Bank } from '../../../bomb-finance';\n\ninterface StakeProps {\n  bank: Bank;\n}\n\nconst Stake: React.FC<StakeProps> = ({ bank }) => {\n  console.log({ bank });\n  const [approveStatus, approve] = useApprove(bank.depositToken, bank.address);\n\n  const { color: themeColor } = useContext(ThemeContext);\n  const tokenBalance = useTokenBalance(bank.depositToken);\n  const stakedBalance = useStakedBalance(bank.contract, bank.poolId);\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars(bank.depositTokenName, bank.depositToken);\n  const tokenPriceInDollars = useMemo(\n    () => (stakedTokenPriceInDollars ? stakedTokenPriceInDollars : null),\n    [stakedTokenPriceInDollars],\n  );\n  const earnedInDollars = (\n    Number(tokenPriceInDollars) * Number(getDisplayBalance(stakedBalance, bank.depositToken.decimal))\n  ).toFixed(2);\n  const { onStake } = useStake(bank);\n  const { onZap } = useZap(bank);\n  const { onWithdraw } = useWithdraw(bank);\n\n  const [onPresentDeposit, onDismissDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      decimals={bank.depositToken.decimal}\n      onConfirm={(amount) => {\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\n        onStake(amount);\n        onDismissDeposit();\n      }}\n      tokenName={bank.depositTokenName}\n    />,\n  );\n\n  const [onPresentZap, onDissmissZap] = useModal(\n    <ZapModal\n      decimals={bank.depositToken.decimal}\n      onConfirm={(zappingToken, tokenName, amount) => {\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\n        onZap(zappingToken, tokenName, amount);\n        onDissmissZap();\n      }}\n      tokenName={bank.depositTokenName}\n    />,\n  );\n\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      decimals={bank.depositToken.decimal}\n      onConfirm={(amount) => {\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\n        onWithdraw(amount);\n        onDismissWithdraw();\n      }}\n      tokenName={bank.depositTokenName}\n    />,\n  );\n\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <CardIcon>\n              <TokenSymbol symbol={bank.depositToken.symbol} size={54} />\n            </CardIcon>\n            <Value value={getDisplayBalance(stakedBalance, bank.depositToken.decimal)} />\n\n            {/* <Label text={`≈ $${earnedInDollars}`} /> */}\n\n            <Typography style={{ textTransform: 'uppercase', color: '#fffff' }}>{`≈ $${earnedInDollars}`}</Typography>\n            <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>\n              {`${bank.depositTokenName} Staked`}\n            </Typography>\n            {/* <Label text={`${bank.depositTokenName} Staked`} /> */}\n          </StyledCardHeader>\n          <StyledCardActions>\n            {approveStatus !== ApprovalState.APPROVED ? (\n              <Button\n                disabled={\n                  bank.closedForStaking ||\n                  approveStatus === ApprovalState.PENDING ||\n                  approveStatus === ApprovalState.UNKNOWN\n                }\n                onClick={approve}\n                className={\n                  bank.closedForStaking ||\n                  approveStatus === ApprovalState.PENDING ||\n                  approveStatus === ApprovalState.UNKNOWN\n                    ? 'shinyButtonDisabled'\n                    : 'shinyButton'\n                }\n                style={{ marginTop: '20px' }}\n              >\n                {`Approve ${bank.depositTokenName}`}\n              </Button>\n            ) : (\n              <>\n                <IconButton onClick={onPresentWithdraw}>\n                  <RemoveIcon />\n                </IconButton>\n                <StyledActionSpacer />\n                <IconButton\n                  disabled={\n                    bank.closedForStaking ||\n                    bank.depositTokenName === 'BOMB-BSHARE-LP' ||\n                    bank.depositTokenName === 'BOMB' ||\n                    bank.depositTokenName === 'BOMB-BTCB-LP' ||\n                    bank.depositTokenName === '80BOMB-20BTCB-LP' ||\n                    bank.depositTokenName === '80BSHARE-20WBNB-LP' ||\n                    bank.depositTokenName === 'BUSM-BUSD-LP' ||\n                    bank.depositTokenName === 'BBOND'\n                  }\n                  onClick={() => (bank.closedForStaking ? null : onPresentZap())}\n                >\n                  <FlashOnIcon style={{ color: themeColor.grey[400] }} />\n                </IconButton>\n                <StyledActionSpacer />\n                <IconButton\n                  disabled={bank.closedForStaking}\n                  onClick={() => (bank.closedForStaking ? null : onPresentDeposit())}\n                >\n                  <AddIcon />\n                </IconButton>\n              </>\n            )}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Stake;\n","import {useContext} from 'react';\nimport {Context as BanksContext} from '../contexts/Banks';\nimport {Bank, ContractName} from '../bomb-finance';\n\nconst useBank = (contractName: ContractName): Bank => {\n  const {banks} = useContext(BanksContext);\n  return banks.find((bank) => bank.contract === contractName);\n};\n\nexport default useBank;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { useParams } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Box, Button, Card, CardContent, Typography, Grid } from '@material-ui/core';\n\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport useBank from '../../hooks/useBank';\nimport useStatsForPool from '../../hooks/useStatsForPool';\nimport useRedeem from '../../hooks/useRedeem';\nimport { Bank as BankEntity } from '../../bomb-finance';\nimport useBombFinance from '../../hooks/useBombFinance';\nimport { Alert } from '@material-ui/lab';\n//import { bankDefinitions } from '../../config';\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px',\n    },\n  },\n}));\n\nconst Bank: React.FC = () => {\n  useEffect(() => window.scrollTo(0, 0));\n  const classes = useStyles();\n  const { bankId } = useParams();\n  const bank = useBank(bankId);\n\n  const { account } = useWallet();\n  const { onRedeem } = useRedeem(bank);\n\n  let statsOnPool = useStatsForPool(bank);\n  // console.log(statsOnPool);\n\n  //   if (bank.depositTokenName.includes('80BOMB-20BTCB-LP') || bank.depositTokenName.includes('80BSHARE-20WBNB-LP')) {\n  //     statsOnPool = {\n  //       dailyAPR: 'COMING SOON',\n  //       yearlyAPR: 'COMING SOON',\n  //       TVL: 'COMING SOON',\n  //     }\n  //   }\n\n  //const statsOnPool = useStatsForPool(bank);\n  let vaultUrl: string;\n  if (bank.depositTokenName.includes('BOMB-BTCB')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else if (bank.depositTokenName.includes('BOMB-BSHARE')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/';\n  } else if (bank.depositTokenName.includes('BSHARE-BNB')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bshare-wbnb';\n  }\n\n  return account && bank ? (\n    <>\n      <PageHeader\n        icon=\"💣\"\n        //     subtitle={`Deposit ${bank?.depositTokenName} and earn ${bank?.earnTokenName}`}\n        title={bank?.name}\n      />\n      <Box mt={5}>\n        {vaultUrl ? (\n          <Grid container justify=\"center\" spacing={3} style={{ marginBottom: '30px' }}>\n            <Alert variant=\"filled\" severity=\"info\">\n              <h3>Our autocompounding vaults are live!</h3>\n              <br />\n              We support zapping tokens, and auto-compound every 2 hours!\n              <br />\n              Check it out here: <a href={vaultUrl}>{vaultUrl}</a>\n            </Alert>{' '}\n          </Grid>\n        ) : (\n          ''\n        )}\n      </Box>\n      <Box>\n        <Grid container justify=\"center\" spacing={3} style={{ marginBottom: '50px' }}>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{ textAlign: 'center' }}>\n                <Typography>APR</Typography>\n                <Typography>{bank.closedForStaking ? '0.00' : statsOnPool?.yearlyAPR}%</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{ textAlign: 'center' }}>\n                <Typography>Daily APR</Typography>\n                <Typography>{bank.closedForStaking ? '0.00' : statsOnPool?.dailyAPR}%</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{ textAlign: 'center' }}>\n                <Typography>TVL</Typography>\n                <Typography>${statsOnPool?.TVL}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Box mt={5}>\n        <StyledBank>\n          <StyledCardsWrapper>\n            <StyledCardWrapper>\n              <Harvest bank={bank} />\n            </StyledCardWrapper>\n            <Spacer />\n            <StyledCardWrapper>{<Stake bank={bank} />}</StyledCardWrapper>\n          </StyledCardsWrapper>\n          <Spacer size=\"lg\" />\n          {bank.depositTokenName.includes('LP') && <LPTokenHelpText bank={bank} />}\n          <Spacer size=\"lg\" />\n          <div>\n            <Button onClick={onRedeem} className=\"shinyButtonSecondary\">\n              Claim &amp; Withdraw\n            </Button>\n          </div>\n          <Spacer size=\"lg\" />\n        </StyledBank>\n      </Box>\n    </>\n  ) : !bank ? (\n    <BankNotFound />\n  ) : (\n    <UnlockWallet />\n  );\n};\n\nconst LPTokenHelpText: React.FC<{ bank: BankEntity }> = ({ bank }) => {\n  const bombFinance = useBombFinance();\n  const bombAddr = bombFinance.BOMB.address;\n  const bshareAddr = bombFinance.BSHARE.address;\n  const busmAddr = bombFinance.BUSM.address;\n  const busdAddr = bombFinance.BUSD.address;\n\n  //const depositToken = bank.depositTokenName;\n  //console.log({depositToken})\n  let pairName: string;\n  let uniswapUrl: string;\n  // let vaultUrl: string;\n  if (bank.depositTokenName.includes('BOMB-BTCB')) {\n    pairName = 'BOMB-BTCB pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c/' + bombAddr;\n    //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else if (bank.depositTokenName.includes('80BOMB-20BTCB-LP')) {\n    pairName = 'BOMB MAXI 80% BOMB - 20% BTCB (at ACSI.finance)';\n    uniswapUrl =\n      'https://app.acsi.finance/#/pool/0xd6f52e8ab206e59a1e13b3d6c5b7f31e90ef46ef000200000000000000000028/invest';\n    //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else if (bank.depositTokenName.includes('80BSHARE-20WBNB-LP')) {\n    pairName = 'BSHARE MAXI 80% BSHARE - 20% BNB (at ACSI.finance)';\n    uniswapUrl =\n      'https://app.acsi.finance/#/pool/0x2c374ed1575e5c2c02c569f627299e902a1972cb000200000000000000000027/invest';\n    //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else if (bank.depositTokenName.includes('BOMB-BSHARE')) {\n    pairName = 'BOMB-BSHARE pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/' + bombAddr + '/' + bshareAddr;\n    //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else if (bank.depositTokenName.includes('BUSM-BUSD')) {\n    pairName = 'BUSM-BUSD pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/' + busmAddr + '/' + busdAddr;\n    //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else {\n    pairName = 'BSHARE-BNB pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/BNB/' + bshareAddr;\n    //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bshare-bnb';\n  }\n  return (\n    <Card>\n      <CardContent>\n        <StyledLink href={uniswapUrl} target=\"_blank\">\n          {`Provide liquidity for ${pairName} now!`}\n        </StyledLink>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst BankNotFound = () => {\n  return (\n    <Center>\n      <PageHeader icon=\"🏚\" title=\"Not Found\" subtitle=\"You've hit a bank just robbed by unicorns.\" />\n    </Center>\n  );\n};\n\nconst StyledBank = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  color: ${(props) => props.theme.color.primary.main};\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst Center = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default Bank;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Button, Card, CardActions, CardContent, Typography, Grid } from '@material-ui/core';\n\nimport TokenSymbol from '../../components/TokenSymbol';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\n\nconst FarmCard = ({ bank }) => {\n  const { account } = useWallet();\n\n  let depositToken = bank.depositTokenName.toUpperCase();\n  if (depositToken === '80BOMB-20BTCB-LP') {\n    depositToken = 'BOMB-MAXI';\n  }\n  if (depositToken === '80BSHARE-20WBNB-LP') {\n    depositToken = 'BSHARE-MAXI';\n  }\n  return (\n    <Grid item xs={12} md={4} lg={4}>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Box style={{ position: 'relative' }}>\n            <Box\n              style={{\n                position: 'absolute',\n                right: '0px',\n                top: '-5px',\n                height: '48px',\n                width: '48px',\n                borderRadius: '40px',\n                backgroundColor: '#363746',\n                alignItems: 'center',\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <TokenSymbol size={32} symbol={bank.depositTokenName} />\n            </Box>\n            <Typography variant=\"h5\" component=\"h2\">\n              {bank.depositTokenName}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {/* {bank.name} */}\n              Deposit {depositToken.toUpperCase()} Earn {` ${bank.earnTokenName}`}\n            </Typography>\n          </Box>\n        </CardContent>\n        <CardActions style={{ justifyContent: 'flex-end' }}>\n          {!!account ? (\n            <Button className=\"shinyButtonSecondary\" component={Link} to={`/farm/${bank.contract}`}>\n              View\n            </Button>\n          ) : (\n            <UnlockWallet />\n          )}\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default FarmCard;\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport Bank from '../Bank';\n\nimport { Box, Container, Typography, Grid } from '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab';\n\nimport Page from '../../components/Page';\nimport FarmCard from './FarmCard';\n//import FarmImage from '../../assets/img/farm.png';\nimport { createGlobalStyle } from 'styled-components';\n\nimport useBanks from '../../hooks/useBanks';\nimport { Helmet } from 'react-helmet';\n\nimport HomeImage from '../../assets/img/background.jpg';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\n\nconst TITLE = 'bomb.money | Farms';\n\nconst Farm = () => {\n  const [banks] = useBanks();\n  const { path } = useRouteMatch();\n  const activeBanks = banks.filter((bank) => !bank.finished);\n  return (\n    <Switch>\n      <Page>\n        <Route exact path={path}>\n          <BackgroundImage />\n          <Helmet>\n            <title>{TITLE}</title>\n          </Helmet>\n          <Container maxWidth=\"lg\">\n            <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\n              Reward Farms\n            </Typography>\n\n            <Box mt={5}>\n              <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 3).length === 0}>\n                <Typography color=\"textYellow\" align=\"center\" variant=\"h4\" gutterBottom>\n                  Earn BSHARE by staking Pancake LPs & BBOND\n                </Typography>\n                {/* <Alert variant=\"filled\" severity=\"info\">\n                    <h4>\n                      Farms started November 25th 2021 and will continue running for 1 full year.</h4>\n                  </Alert> */}\n                <Grid container spacing={3} style={{ marginTop: '20px' }}>\n                  {activeBanks\n                    .filter((bank) => bank.sectionInUI === 3)\n                    .map((bank) => (\n                      <React.Fragment key={bank.name}>\n                        <FarmCard bank={bank} />\n                      </React.Fragment>\n                    ))}\n                </Grid>\n              </div>\n\n              <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 2).length === 0}>\n                {/* <Typography color=\"textPrimary\" variant=\"h4\" gutterBottom style={{ marginTop: '20px' }}>\n                    Inactive ApeSwap Farms\n                  </Typography> */}\n                <Typography color=\"textYellow\" align=\"center\" variant=\"h4\" gutterBottom style={{ marginTop: '40px' }}>\n                  Earn BSHARE by ACSI Maxi LPs\n                </Typography>\n                {/* <Alert variant=\"filled\" severity=\"info\">\n                    These farms are functioning properly, but need an update to show the accurate TVL and APR.\n                    <br />\n                    Reward allocations are 20% of all BSHARE rewards to the 80BOMB-20BTCB-LP and 10% of all rewards to\n                    the 80BSHARE-20BSHARE.\n                  </Alert> */}\n                <Grid container spacing={3} style={{ marginTop: '20px', display: 'flex', alignItems: 'center' }}>\n                  {activeBanks\n                    .filter((bank) => bank.sectionInUI === 2)\n                    .map((bank) => (\n                      <React.Fragment key={bank.name}>\n                        <FarmCard bank={bank} />\n                      </React.Fragment>\n                    ))}\n                </Grid>\n              </div>\n\n              <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 1).length === 0}>\n                <Typography color=\"textYellow\" align=\"center\" variant=\"h4\" gutterBottom style={{ marginTop: '40px' }}>\n                  Earn BSHARE by staking BUSM Liquidity\n                </Typography>\n                {/* <Alert variant=\"filled\" severity=\"warning\">\n                    Genesis pools have ended. Please claim all rewards and remove funds from Genesis pools.\n                  </Alert> */}\n                <Grid container spacing={3} style={{ marginTop: '20px' }}>\n                  {activeBanks\n                    .filter((bank) => bank.sectionInUI === 1)\n                    .map((bank) => (\n                      <React.Fragment key={bank.name}>\n                        <FarmCard bank={bank} />\n                      </React.Fragment>\n                    ))}\n                </Grid>\n              </div>\n\n              <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 0).length === 0}>\n                <Typography color=\"textYellow\" align=\"center\" variant=\"h4\" gutterBottom style={{ marginTop: '40px' }}>\n                  Deprecated Farms\n                </Typography>\n                <Alert variant=\"filled\" severity=\"warning\">\n                  All farms here have ended or are ending soon. Deposits have been paused, please remove funds.\n                </Alert>\n                <Grid container spacing={3} style={{ marginTop: '20px' }}>\n                  {activeBanks\n                    .filter((bank) => bank.sectionInUI === 0)\n                    .map((bank) => (\n                      <React.Fragment key={bank.name}>\n                        <FarmCard bank={bank} />\n                      </React.Fragment>\n                    ))}\n                </Grid>\n              </div>\n            </Box>\n          </Container>\n        </Route>\n        <Route path={`${path}/:bankId`}>\n          <BackgroundImage />\n          <Bank />\n        </Route>\n      </Page>\n    </Switch>\n  );\n};\n\nexport default Farm;\n"],"sourceRoot":""}