{"version":3,"sources":["components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","components/Spacer/Spacer.tsx","components/PageHeader/PageHeader.tsx","components/Button/Button.tsx","views/Bond/components/ExchangeModal.tsx","hooks/useCatchError.ts","views/Bond/components/ExchangeCard.tsx","hooks/useCashPriceInLastTWAP.ts","views/Bond/components/ExchangeStat.tsx","hooks/useBondsPurchasable.ts","bomb-finance/constants.ts","views/Bond/Bond.tsx"],"names":["StyledInputWrapper","styled","div","props","theme","color","grey","borderRadius","spacing","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","TokenInput","max","symbol","onSelectMax","toLocaleString","Button","size","variant","onClick","StyledModalActions","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","Spacer","s","useContext","ThemeContext","StyledPageHeader","StyledTitle","h1","StyledSubtitle","h3","PageHeader","icon","subtitle","title","StyledButton","button","boxShadow","disabled","fontSize","padding","undefined","StyledLink","Link","StyledExternalLink","a","buttonColor","buttonSize","buttonPadding","href","text","to","teal","primary","main","ButtonChild","useMemo","target","ExchangeModal","description","onConfirm","onDismiss","action","tokenName","useState","val","setVal","fullBalance","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","handleSelectMax","Modal","ModalTitle","Label","useCatchError","addPopup","useAddPopup","promise","message","catch","err","includes","console","error","stack","StyledCardTitle","StyledCardIcon","StyledExchanger","StyledExchangeArrow","StyledToken","StyledCardActions","StyledDesc","span","StyledCardContentInner","ExchangeCard","fromToken","fromTokenName","toToken","toTokenName","priceDesc","onExchange","disabledDescription","catchError","Treasury","useBombFinance","contracts","useApprove","address","approveStatus","approve","account","useWallet","balance","useTokenBalance","useModal","onPresent","Card","CardContent","TokenSymbol","faArrowRight","ApprovalState","APPROVED","className","PENDING","UNKNOWN","UnlockWallet","useCashPriceInLastTWAP","BigNumber","from","price","setPrice","bombFinance","fetchCashPrice","getBombPriceInLastTWAP","useEffect","refreshInterval","setInterval","config","clearInterval","ExchangeStat","useBondsPurchasable","setBalance","getBondsPurchasable","fetchBondsPurchasable","DECIMALS_18","pow","BOND_REDEEM_PRICE_BN","mul","BackgroundImage","createGlobalStyle","HomeImage","StyledBond","StyledCardWrapper","StyledStatsWrapper","Bond","path","useRouteMatch","addTransaction","useTransactionAdder","bondStat","useBondStats","cashPrice","bondsPurchasable","bondBalance","BBOND","handleBuyBonds","amount","buyBonds","tx","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInFtm","isBondPayingPremium","bondScale","Page","Helmet","exact","Box","mt","Grid","item","xs","sm","justify","style","margin","display","Alert","severity","BOMB","getDisplayBalance","eq"],"mappings":"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","file":"static/js/16.0ebd5cf1.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  startAdornment?: React.ReactNode;\n  value: string;\n}\n\nconst Input: React.FC<InputProps> = ({endAdornment, onChange, placeholder, startAdornment, value}) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  );\n};\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[200]};\n  border-radius: ${(props) => props.theme.borderRadius}px;\n  display: flex;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledInput = styled.input`\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.color.grey[600]};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Button} from '@material-ui/core';\nimport Input, {InputProps} from '../Input';\n\ninterface TokenInputProps extends InputProps {\n  max: number | string;\n  symbol: string;\n  onSelectMax?: () => void;\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({max, symbol, onChange, onSelectMax, value}) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} Available\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\n            <StyledSpacer />\n            <div>\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  );\n};\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`;\n\nexport default TokenInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalActions: React.FC = ({children}) => {\n  const l = React.Children.toArray(children).length;\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <StyledSpacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  );\n};\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[100]}00;\n  display: flex;\n  height: 96px;\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\n    ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ModalActions;\n","import React, {useContext} from 'react';\nimport styled, {ThemeContext} from 'styled-components';\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst Spacer: React.FC<SpacerProps> = ({size = 'md'}) => {\n  const {spacing} = useContext(ThemeContext);\n\n  let s: number;\n  switch (size) {\n    case 'lg':\n      s = spacing[6];\n      break;\n    case 'sm':\n      s = spacing[2];\n      break;\n    case 'md':\n    default:\n      s = spacing[4];\n  }\n\n  return <StyledSpacer size={s} />;\n};\n\ninterface StyledSpacerProps {\n  size: number;\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`;\n\nexport default Spacer;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface PageHeaderProps {\n  icon: React.ReactNode;\n  subtitle?: string;\n  title?: string;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({icon, subtitle, title}) => {\n  return (\n    <StyledPageHeader>\n      {/* <StyledIcon>{icon}</StyledIcon> */}\n      <StyledTitle>{title}</StyledTitle>\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\n    </StyledPageHeader>\n  );\n};\n\nconst StyledPageHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\n  padding-top: ${(props) => props.theme.spacing[6]}px;\n  max-width: 512px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst StyledTitle = styled.h1`\n  color: '#f9d749';\n  font-size: 36px;\n  font-weight: 700;\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledSubtitle = styled.h3`\n  color: ${(props) => props.theme.color.grey[400]};\n  font-size: 18px;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n`;\n\nexport default PageHeader;\n","import React, {useContext, useMemo} from 'react';\nimport styled, {ThemeContext} from 'styled-components';\n\nimport {Link} from 'react-router-dom';\n\ninterface ButtonProps {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  href?: string;\n  onClick?: () => void;\n  size?: 'sm' | 'md' | 'lg';\n  text?: string;\n  to?: string;\n  variant?: 'default' | 'secondary' | 'tertiary';\n}\n\nconst Button: React.FC<ButtonProps> = ({children, disabled, href, onClick, size, text, to, variant}) => {\n  const {color, spacing} = useContext(ThemeContext);\n\n  let buttonColor: string;\n  switch (variant) {\n    case 'secondary':\n      buttonColor = color.teal[200];\n      break;\n    case 'default':\n    default:\n      buttonColor = color.primary.main;\n  }\n\n  let boxShadow: string;\n  let buttonSize: number;\n  let buttonPadding: number;\n  let fontSize: number;\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3];\n      buttonSize = 36;\n      fontSize = 14;\n      break;\n    case 'lg':\n      buttonPadding = spacing[4];\n      buttonSize = 72;\n      fontSize = 16;\n      break;\n    case 'md':\n    default:\n      buttonPadding = spacing[4];\n      buttonSize = 56;\n      fontSize = 16;\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>;\n    } else if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      );\n    } else {\n      return text;\n    }\n  }, [href, text, to]);\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  );\n};\n\ninterface StyledButtonProps {\n  boxShadow: string;\n  color: string;\n  disabled?: boolean;\n  fontSize: number;\n  padding: number;\n  size: number;\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[900]};\n  border: 0;\n  border-radius: 12px;\n  box-shadow: ${(props) => props.boxShadow};\n  color: ${(props) => (!props.disabled ? props.color : `${props.color}55`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  &:hover {\n    background-color: ${(props) => props.color};\n    color: ${(props) => props.theme.color.grey[900]};\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default Button;\n","import React, {useCallback, useMemo, useState} from 'react';\nimport Button from '../../../components/Button';\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\nimport {BigNumber} from 'ethers';\nimport Label from '../../../components/Label';\n\ninterface ExchangeModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  title: string;\n  description: string;\n  action: string;\n  tokenName: string;\n}\n\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\n  max,\n  title,\n  description,\n  onConfirm,\n  onDismiss,\n  action,\n  tokenName,\n}) => {\n  const [val, setVal] = useState('');\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\n\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={title} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <Label text={description} />\n      <ModalActions>\n        <Button text=\"Cancel\" onClick={onDismiss} />\n        <Button text={action} onClick={() => onConfirm(val)} />\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default ExchangeModal;\n","import {useCallback} from 'react';\nimport {useAddPopup} from '../state/application/hooks';\n\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\n\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\n      promise.catch((err) => {\n        if (err.message.includes('User denied')) {\n          // User denied transaction signature on MetaMask.\n          return;\n        }\n        console.error(`Uncaught exception: ${err.stack}`);\n        addPopup({error: {message, stack: err.stack}});\n      });\n    },\n    [addPopup],\n  );\n}\n\nexport default useCatchError;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Card } from '@material-ui/core';\n\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport useBombFinance from '../../../hooks/useBombFinance';\nimport Label from '../../../components/Label';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport useModal from '../../../hooks/useModal';\nimport ExchangeModal from './ExchangeModal';\nimport ERC20 from '../../../bomb-finance/ERC20';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useCatchError from '../../../hooks/useCatchError';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../../components/UnlockWallet';\n\ninterface ExchangeCardProps {\n  action: string;\n  fromToken: ERC20;\n  fromTokenName: string;\n  toToken: ERC20;\n  toTokenName: string;\n  priceDesc: string;\n  onExchange: (amount: string) => void;\n  disabled?: boolean;\n  disabledDescription?: string;\n}\n\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\n  action,\n  fromToken,\n  fromTokenName,\n  toToken,\n  toTokenName,\n  priceDesc,\n  onExchange,\n  disabled = false,\n  disabledDescription,\n}) => {\n  const catchError = useCatchError();\n\n  const {\n    contracts: { Treasury },\n  } = useBombFinance();\n  const [approveStatus, approve] = useApprove(fromToken, Treasury.address);\n\n  const { account } = useWallet();\n  const balance = useTokenBalance(fromToken);\n  const [onPresent, onDismiss] = useModal(\n    <ExchangeModal\n      title={action}\n      description={priceDesc}\n      max={balance}\n      onConfirm={(value) => {\n        onExchange(value);\n        onDismiss();\n      }}\n      action={action}\n      tokenName={fromTokenName}\n    />,\n  );\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardTitle>{`${action} ${toTokenName}`}</StyledCardTitle>\n          <StyledExchanger>\n            <StyledToken>\n              <StyledCardIcon>\n                <TokenSymbol symbol={fromToken.symbol} size={54} />\n              </StyledCardIcon>\n              <Label text={fromTokenName} variant=\"yellow\" />\n            </StyledToken>\n            <StyledExchangeArrow>\n              <FontAwesomeIcon icon={faArrowRight} />\n            </StyledExchangeArrow>\n            <StyledToken>\n              <StyledCardIcon>\n                <TokenSymbol symbol={toToken.symbol} size={54} />\n              </StyledCardIcon>\n              <Label text={toTokenName} variant=\"yellow\" />\n            </StyledToken>\n          </StyledExchanger>\n          <StyledDesc>{priceDesc}</StyledDesc>\n          <StyledCardActions>\n            {!!account ? (\n              <>\n                {approveStatus !== ApprovalState.APPROVED && !disabled ? (\n                  <Button\n                    className=\"shinyButton\"\n                    disabled={approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN}\n                    onClick={() => catchError(approve(), `Unable to approve ${fromTokenName}`)}\n                  >\n                    {`Approve ${fromTokenName}`}\n                  </Button>\n                ) : (\n                  <Button\n                    className={disabled ? 'shinyButtonDisabled' : 'shinyButton'}\n                    onClick={onPresent}\n                    disabled={disabled}\n                  >\n                    {disabledDescription || action}\n                  </Button>\n                )}\n              </>\n            ) : (\n              <UnlockWallet />\n            )}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardTitle = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  height: 64px;\n  justify-content: center;\n  color: #f9d749;\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\n`;\n\nconst StyledCardIcon = styled.div`\n  background-color: ${(props) => props.theme.color.grey[900]};\n  width: 72px;\n  height: 72px;\n  border-radius: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\n`;\n\nconst StyledExchanger = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\n`;\n\nconst StyledExchangeArrow = styled.div`\n  font-size: 20px;\n  padding-left: ${(props) => props.theme.spacing[3]}px;\n  padding-right: ${(props) => props.theme.spacing[3]}px;\n  padding-bottom: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledToken = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n`;\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n  width: 100%;\n`;\n\nconst StyledDesc = styled.span``;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default ExchangeCard;\n","import {useCallback, useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport config from '../config';\nimport {BigNumber} from 'ethers';\n\nconst useCashPriceInLastTWAP = () => {\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n\n  const fetchCashPrice = useCallback(async () => {\n    setPrice(await bombFinance.getBombPriceInLastTWAP());\n  }, [bombFinance]);\n\n  useEffect(() => {\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch BOMB price: ${err.stack}`));\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [setPrice, bombFinance, fetchCashPrice]);\n\n  return price;\n};\n\nexport default useCashPriceInLastTWAP;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Card} from '@material-ui/core';\n\ninterface ExchangeStatProps {\n  tokenName: string;\n  description: string;\n  price: string;\n}\n\nconst ExchangeStat: React.FC<ExchangeStatProps> = ({tokenName, description, price}) => {\n  return (\n    <Card>\n      <StyledCardContentInner>\n        <StyledCardTitle>{`💰 ${tokenName} = ${price} BTC`}</StyledCardTitle>\n        <StyledDesc>{description}</StyledDesc>\n      </StyledCardContentInner>\n    </Card>\n  );\n};\n\nconst StyledCardTitle = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\n`;\n\nconst StyledDesc = styled.span`\n  //color: ${(props) => props.theme.color.grey[300]};\n  text-align: center;\n`;\n\nconst StyledCardContentInner = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: ${(props) => props.theme.spacing[2]}px;\n`;\n\nexport default ExchangeStat;\n","import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\n//import ERC20 from '../bomb-finance/ERC20';\nimport useBombFinance from './useBombFinance';\n//import config from '../config';\n\nconst useBondsPurchasable = () => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchBondsPurchasable() {\n      try {\n        setBalance(await bombFinance.getBondsPurchasable());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchBondsPurchasable();\n  }, [setBalance, bombFinance]);\n\n  return balance;\n};\n\nexport default useBondsPurchasable;\n","import {BigNumber} from 'ethers';\n\nexport const DECIMALS_18 = BigNumber.from(10).pow(14);\n\nexport const BOND_REDEEM_PRICE = 1.01;\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\n","import React, { useCallback, useMemo } from 'react';\nimport Page from '../../components/Page';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport PageHeader from '../../components/PageHeader';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats';\n//import useBombStats from '../../hooks/useBombStats';\nimport useBombFinance from '../../hooks/useBombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../bomb-finance/constants';\nimport { Alert } from '@material-ui/lab';\n\nimport HomeImage from '../../assets/img/background.jpg';\nimport { Grid, Box } from '@material-ui/core';\nimport { Helmet } from 'react-helmet';\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\nconst TITLE = 'bomb.money | Bonds';\n\nconst Bond: React.FC = () => {\n  const { path } = useRouteMatch();\n  const bombFinance = useBombFinance();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats();\n  //const bombStat = useBombStats();\n  const cashPrice = useCashPriceInLastTWAP();\n\n  const bondsPurchasable = useBondsPurchasable();\n\n  const bondBalance = useTokenBalance(bombFinance?.BBOND);\n  //const scalingFactor = useMemo(() => (cashPrice ? Number(cashPrice) : null), [cashPrice]);\n\n  const handleBuyBonds = useCallback(\n    async (amount: string) => {\n      const tx = await bombFinance.buyBonds(amount);\n      addTransaction(tx, {\n        summary: `Buy ${Number(amount).toFixed(2)} BBOND with ${amount} BOMB`,\n      });\n    },\n    [bombFinance, addTransaction],\n  );\n\n  const handleRedeemBonds = useCallback(\n    async (amount: string) => {\n      const tx = await bombFinance.redeemBonds(amount);\n      addTransaction(tx, { summary: `Redeem ${amount} BBOND` });\n    },\n    [bombFinance, addTransaction],\n  );\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat]);\n  const isBondPayingPremium = useMemo(() => Number(bondStat?.tokenInFtm) >= 1.1, [bondStat]);\n  // console.log(\"bondstat\", Number(bondStat?.tokenInFtm))\n  const bondScale = (Number(cashPrice) / 100000000000000).toFixed(4);\n\n  return (\n    <Switch>\n      <Page>\n        <BackgroundImage />\n        <Helmet>\n          <title>{TITLE}</title>\n        </Helmet>\n        <Route exact path={path}>\n          <PageHeader icon={'💣'} title=\"Buy &amp; Redeem Bonds\" subtitle=\"Earn premiums upon redemption\" />\n        </Route>\n        {isBondPayingPremium === false ? (\n          <Box mt={5}>\n            <Grid item xs={12} sm={12} justify=\"center\" style={{ margin: '18px', display: 'flex' }}>\n              <Alert variant=\"filled\" severity=\"error\">\n                <b>Claiming below 1.1 peg will not receive a redemption bonus, claim wisely!</b>\n              </Alert>\n            </Grid>\n          </Box>\n        ) : (\n          <></>\n        )}\n\n        <StyledBond>\n          <StyledCardWrapper>\n            <ExchangeCard\n              action=\"Purchase\"\n              fromToken={bombFinance.BOMB}\n              fromTokenName=\"BOMB\"\n              toToken={bombFinance.BBOND}\n              toTokenName=\"BBOND\"\n              priceDesc={\n                !isBondPurchasable\n                  ? 'BOMB is over peg'\n                  : getDisplayBalance(bondsPurchasable, 18, 4) + ' BBOND available for purchase'\n              }\n              onExchange={handleBuyBonds}\n              disabled={!bondStat || isBondRedeemable}\n            />\n          </StyledCardWrapper>\n          <StyledStatsWrapper>\n            <ExchangeStat\n              tokenName=\"10,000 BOMB\"\n              description=\"Last-Hour TWAP Price\"\n              //price={Number(bombStat?.tokenInFtm).toFixed(4) || '-'}\n              price={bondScale || '-'}\n            />\n            <Spacer size=\"md\" />\n            <ExchangeStat\n              tokenName=\"10,000 BBOND\"\n              description=\"Current Price: (BOMB)^2\"\n              price={Number(bondStat?.tokenInFtm).toFixed(4) || '-'}\n            />\n          </StyledStatsWrapper>\n          <StyledCardWrapper>\n            <ExchangeCard\n              action=\"Redeem\"\n              fromToken={bombFinance.BBOND}\n              fromTokenName=\"BBOND\"\n              toToken={bombFinance.BOMB}\n              toTokenName=\"BOMB\"\n              priceDesc={`${getDisplayBalance(bondBalance)} BBOND Available in wallet`}\n              onExchange={handleRedeemBonds}\n              disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\n              disabledDescription={!isBondRedeemable ? `Enabled when 10,000 BOMB > ${BOND_REDEEM_PRICE}BTC` : null}\n            />\n          </StyledCardWrapper>\n        </StyledBond>\n      </Page>\n    </Switch>\n  );\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\n\nexport default Bond;\n"],"sourceRoot":""}