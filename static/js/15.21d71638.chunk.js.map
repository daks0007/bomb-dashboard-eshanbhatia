{"version":3,"sources":["components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","components/CardIcon/CardIcon.tsx","hooks/useLpStats.ts","hooks/useZap.ts","hooks/useApproveZapper.ts","views/Bank/components/ZapModal.tsx","hooks/useLpStatsBTC.ts","views/Home/Home.js"],"names":["StyledInputWrapper","styled","div","props","theme","color","grey","borderRadius","spacing","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","TokenInput","max","symbol","onSelectMax","toLocaleString","Button","size","variant","onClick","StyledModalActions","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledCardIcon","CardIcon","useLpStats","lpTicker","useState","stat","setStat","slowRefresh","useRefresh","bombFinance","useBombFinance","useEffect","a","getLPStat","console","error","fetchLpPrice","useZap","bank","handleTransactionReceipt","useHandleTransactionReceipt","onZap","useCallback","zappingToken","tokenName","amount","zapIn","depositTokenName","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","from","useApproveZapper","token","BNB_TICKER","BNB","BOMB_TICKER","BOMB","BSHARE_TICKER","BSHARE","BTC_TICKER","externalTokens","pendingApproval","useHasPendingApproval","address","ZAPPER_ROUTER_ADDR","currentAllowance","useAllowance","approvalState","useMemo","APPROVED","lt","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","response","summary","approval","tokenAddress","spender","StyledActionSpacer","StyledDescriptionText","StyledMenuItem","withStyles","root","backgroundColor","selected","MenuItem","ZapModal","onConfirm","onDismiss","decimals","balance","useWallet","ftmBalance","Number","toFixed","toString","bombBalance","useTokenBalance","bshareBalance","btcBalance","BTC","val","setVal","setZappingToken","zappingTokenBalance","setZappingTokenBalance","token0","token1","estimate","setEstimate","approveZapperStatus","approveZapper","bombFtmLpStats","tShareFtmLpStats","bombLPStats","bshareLPStats","ftmAmountPerLP","startsWith","ftmAmount","handleChange","e","currentTarget","n","isNaN","parseFloat","isFinite","estimateZapIn","String","estimateZap","handleSelectMax","Modal","ModalTitle","text","InputLabel","style","id","Select","event","target","getDisplayBalance","labelId","Label","Alert","severity","useLpStatsBTC","getLPStatBTC","BackgroundImage","createGlobalStyle","HomeImage","useStyles","makeStyles","button","breakpoints","down","Home","classes","TVL","useTotalValueLocked","bShareFtmLpStats","bombStats","useBombStats","bShareStats","usebShareStats","tBondStats","useBondStats","bombPriceInDollars","priceInDollars","bombPriceInBNB","tokenInFtm","bombCirculatingSupply","circulatingSupply","bombTotalSupply","totalSupply","bSharePriceInDollars","bSharePriceInBNB","bShareCirculatingSupply","bShareTotalSupply","tBondPriceInDollars","tBondPriceInBNB","tBondCirculatingSupply","tBondTotalSupply","bombLpZap","bshareLpZap","useModal","onDissmissBombZap","onPresentBombZap","onDissmissBshareZap","onPresentBshareZap","modal","setModal","videoLoading","setVideoLoading","Page","Helmet","Grid","container","item","xs","sm","display","justifyContent","verticalAlign","overflow","src","BombImage","alt","maxHeight","Paper","Box","p","textAlign","href","rel","className","arial-label","fadeIn","onLoad","loading","width","height","title","frameBorder","allow","allowFullscreen","justify","margin","Card","CardContent","align","fontSize","end","separator","prefix","marginTop","position","mt","TokenSymbol","watchAssetInMetamask","top","right","border","filter","MetamaskFox","marginBottom","alignContent","roundAndFormatNumber","disabled","tokenAmount","priceOfOne","totalLiquidity"],"mappings":"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","file":"static/js/15.21d71638.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  startAdornment?: React.ReactNode;\n  value: string;\n}\n\nconst Input: React.FC<InputProps> = ({endAdornment, onChange, placeholder, startAdornment, value}) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  );\n};\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[200]};\n  border-radius: ${(props) => props.theme.borderRadius}px;\n  display: flex;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledInput = styled.input`\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.color.grey[600]};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Button} from '@material-ui/core';\nimport Input, {InputProps} from '../Input';\n\ninterface TokenInputProps extends InputProps {\n  max: number | string;\n  symbol: string;\n  onSelectMax?: () => void;\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({max, symbol, onChange, onSelectMax, value}) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} Available\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\n            <StyledSpacer />\n            <div>\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  );\n};\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`;\n\nexport default TokenInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalActions: React.FC = ({children}) => {\n  const l = React.Children.toArray(children).length;\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <StyledSpacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  );\n};\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[100]}00;\n  display: flex;\n  height: 96px;\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\n    ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ModalActions;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface CardIconProps {\n  children?: React.ReactNode;\n}\n\nconst CardIcon: React.FC<CardIconProps> = ({children}) => <StyledCardIcon>{children}</StyledCardIcon>;\n\nconst StyledCardIcon = styled.div`\n  background-color: #363746;\n  font-size: 36px;\n  height: 95px;\n  width: 95px;\n  border-radius: 95px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto ${(props) => props.theme.spacing[3]}px;\n`;\n\nexport default CardIcon;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {LPStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useLpStats = (lpTicker: string) => {\n  const [stat, setStat] = useState<LPStat>();\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchLpPrice() {\n      try {\n        setStat(await bombFinance.getLPStat(lpTicker));\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchLpPrice();\n  }, [setStat, bombFinance, slowRefresh, lpTicker]);\n\n  return stat;\n};\n\nexport default useLpStats;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useZap = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleZap = useCallback(\n    (zappingToken: string, tokenName: string, amount: string) => {\n      handleTransactionReceipt(\n        bombFinance.zapIn(zappingToken, tokenName, amount),\n        `Zap ${amount} in ${bank.depositTokenName}.`,\n      );\n    },\n    [bank, bombFinance, handleTransactionReceipt],\n  );\n  return {onZap: handleZap};\n};\n\nexport default useZap;\n","import {BigNumber, ethers} from 'ethers';\nimport {useCallback, useMemo} from 'react';\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\nimport useAllowance from './useAllowance';\nimport ERC20 from '../bomb-finance/ERC20';\nimport {BNB_TICKER, BOMB_TICKER, BSHARE_TICKER, BTC_TICKER, ZAPPER_ROUTER_ADDR} from '../utils/constants';\nimport useBombFinance from './useBombFinance';\n\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nfunction useApproveZapper(zappingToken: string): [ApprovalState, () => Promise<void>] {\n  const bombFinance = useBombFinance();\n  let token: ERC20;\n  if (zappingToken === BNB_TICKER) token = bombFinance.BNB;\n  else if (zappingToken === BOMB_TICKER) token = bombFinance.BOMB;\n  else if (zappingToken === BSHARE_TICKER) token = bombFinance.BSHARE;\n  else if (zappingToken === BTC_TICKER) token = bombFinance.externalTokens[BTC_TICKER];\n  const pendingApproval = useHasPendingApproval(token.address, ZAPPER_ROUTER_ADDR);\n  const currentAllowance = useAllowance(token, ZAPPER_ROUTER_ADDR, pendingApproval);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    // we might not have enough data to know whether or not we need to approve\n    if (token === bombFinance.BNB) return ApprovalState.APPROVED;\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [currentAllowance, pendingApproval, token, bombFinance]);\n\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n\n    const response = await token.approve(ZAPPER_ROUTER_ADDR, APPROVE_AMOUNT);\n    addTransaction(response, {\n      summary: `Approve ${token.symbol}`,\n      approval: {\n        tokenAddress: token.address,\n        spender: ZAPPER_ROUTER_ADDR,\n      },\n    });\n  }, [approvalState, token, addTransaction]);\n\n  return [approvalState, approve];\n}\n\nexport default useApproveZapper;\n","import React, {useState, useMemo} from 'react';\n\nimport {Button, Select, MenuItem, InputLabel, withStyles} from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport styled from 'styled-components';\n\nimport {getDisplayBalance} from '../../../utils/formatBalance';\nimport Label from '../../../components/Label';\nimport useLpStats from '../../../hooks/useLpStats';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useBombFinance from '../../../hooks/useBombFinance';\nimport {useWallet} from 'use-wallet';\nimport useApproveZapper, {ApprovalState} from '../../../hooks/useApproveZapper';\nimport {BOMB_TICKER, BSHARE_TICKER, BNB_TICKER, BTC_TICKER} from '../../../utils/constants';\nimport {Alert} from '@material-ui/lab';\n\ninterface ZapProps extends ModalProps {\n  onConfirm: (zapAsset: string, lpName: string, amount: string) => void;\n  tokenName?: string;\n  decimals?: number;\n}\n\nconst ZapModal: React.FC<ZapProps> = ({onConfirm, onDismiss, tokenName = '', decimals = 18}) => {\n  const bombFinance = useBombFinance();\n  const {balance} = useWallet();\n  const ftmBalance = (Number(balance) / 1e18).toFixed(4).toString();\n  const bombBalance = useTokenBalance(bombFinance.BOMB);\n  const bshareBalance = useTokenBalance(bombFinance.BSHARE);\n  const btcBalance = useTokenBalance(bombFinance.BTC);\n  const [val, setVal] = useState('');\n  const [zappingToken, setZappingToken] = useState(BNB_TICKER);\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(ftmBalance);\n  const [estimate, setEstimate] = useState({token0: '0', token1: '0'}); // token0 will always be BNB in this case\n  const [approveZapperStatus, approveZapper] = useApproveZapper(zappingToken);\n  const bombFtmLpStats = useLpStats('BOMB-BTCB-LP');\n  const tShareFtmLpStats = useLpStats('BSHARE-BNB-LP');\n  const bombLPStats = useMemo(() => (bombFtmLpStats ? bombFtmLpStats : null), [bombFtmLpStats]);\n  const bshareLPStats = useMemo(() => (tShareFtmLpStats ? tShareFtmLpStats : null), [tShareFtmLpStats]);\n  const ftmAmountPerLP = tokenName.startsWith(BOMB_TICKER) ? bombLPStats?.ftmAmount : bshareLPStats?.ftmAmount;\n  /**\n   * Checks if a value is a valid number or not\n   * @param n is the value to be evaluated for a number\n   * @returns\n   */\n  function isNumeric(n: any) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  const handleChangeAsset = (event: any) => {\n    const value = event.target.value;\n    setZappingToken(value);\n    setZappingTokenBalance(ftmBalance);\n    if (event.target.value === BSHARE_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bshareBalance, decimals));\n    }\n    if (event.target.value === BOMB_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bombBalance, decimals));\n    }\n    if (event.target.value === BTC_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(btcBalance, decimals));\n    }\n  };\n\n  const handleChange = async (e: any) => {\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\n      setVal(e.currentTarget.value);\n      setEstimate({token0: '0', token1: '0'});\n    }\n    if (!isNumeric(e.currentTarget.value)) return;\n    setVal(e.currentTarget.value);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(e.currentTarget.value));\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\n  };\n\n  const handleSelectMax = async () => {\n    setVal(zappingTokenBalance);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(zappingTokenBalance));\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\n  };\n\n  return (\n    <Modal>\n      <ModalTitle text={`Zap in ${tokenName}`} />\n\n      <StyledActionSpacer />\n      <InputLabel style={{color: '#2c2560'}} id=\"label\">\n        Select asset to zap with\n      </InputLabel>\n      <Select onChange={handleChangeAsset} style={{color: '#2c2560'}} labelId=\"label\" id=\"select\" value={zappingToken}>\n        <StyledMenuItem value={BNB_TICKER}>BNB</StyledMenuItem>\n        <StyledMenuItem value={BSHARE_TICKER}>BSHARE</StyledMenuItem>\n        {/* <StyledMenuItem value={BTC_TICKER}>BTC</StyledMenuItem> */}\n        {/* Bomb as an input for zapping will be disabled due to issues occuring with the Gatekeeper system */}\n        {/* <StyledMenuItem value={BOMB_TICKER}>BOMB</StyledMenuItem> */}\n      </Select>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={zappingTokenBalance}\n        symbol={zappingToken}\n      />\n      <Label text=\"Zap Estimations\" />\n      <StyledDescriptionText>\n        {' '}\n        {tokenName}: {Number(estimate.token0) / Number(ftmAmountPerLP)}\n      </StyledDescriptionText>\n      <StyledDescriptionText>\n        {' '}\n        ({Number(estimate.token0)} {tokenName.startsWith(BSHARE_TICKER) ? BSHARE_TICKER : BNB_TICKER} /{' '}\n        {Number(estimate.token1)} {tokenName.startsWith(BSHARE_TICKER) ? BNB_TICKER : BSHARE_TICKER}){' '}\n      </StyledDescriptionText>\n      <ModalActions>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() =>\n            approveZapperStatus !== ApprovalState.APPROVED ? approveZapper() : onConfirm(zappingToken, tokenName, val)\n          }\n        >\n          {approveZapperStatus !== ApprovalState.APPROVED ? 'Approve' : \"Let's go\"}\n        </Button>\n      </ModalActions>\n\n      <StyledActionSpacer />\n      <Alert variant=\"filled\" severity=\"info\">\n        New feature. Use at your own risk!\n      </Alert>\n    </Modal>\n  );\n};\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledDescriptionText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 22px;\n  justify-content: flex-start;\n`;\nconst StyledMenuItem = withStyles({\n  root: {\n    backgroundColor: 'white',\n    color: '#2c2560',\n    '&:hover': {\n      backgroundColor: 'grey',\n      color: '#2c2560',\n    },\n    selected: {\n      backgroundColor: 'black',\n    },\n  },\n})(MenuItem);\n\nexport default ZapModal;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {LPStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useLpStatsBTC = (lpTicker: string) => {\n  const [stat, setStat] = useState<LPStat>();\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchLpPrice() {\n      try {\n        setStat(await bombFinance.getLPStatBTC(lpTicker));\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchLpPrice();\n  }, [setStat, bombFinance, slowRefresh, lpTicker]);\n\n  return stat;\n};\n\nexport default useLpStatsBTC;\n","import React, { useMemo, useState } from 'react';\nimport Page from '../../components/Page';\nimport { createGlobalStyle } from 'styled-components';\nimport CountUp from 'react-countup';\nimport CardIcon from '../../components/CardIcon';\nimport TokenSymbol from '../../components/TokenSymbol';\nimport useBombStats from '../../hooks/useBombStats';\nimport useLpStats from '../../hooks/useLpStats';\nimport useLpStatsBTC from '../../hooks/useLpStatsBTC';\nimport useModal from '../../hooks/useModal';\nimport useZap from '../../hooks/useZap';\nimport useBondStats from '../../hooks/useBondStats';\nimport usebShareStats from '../../hooks/usebShareStats';\nimport useTotalValueLocked from '../../hooks/useTotalValueLocked';\n// import { Bomb as bombTesting } from '../../bomb-finance/deployments/deployments.testing.json';\n//import { Bomb as bombProd } from '../../bomb-finance/deployments/deployments.mainnet.json';\nimport { roundAndFormatNumber } from '../../0x';\nimport MetamaskFox from '../../assets/img/metamask-fox.svg';\nimport { Box, Button, Card, CardContent, Grid, Paper } from '@material-ui/core';\nimport ZapModal from '../Bank/components/ZapModal';\nimport { Alert } from '@material-ui/lab';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { BiLoaderAlt } from 'react-icons/bi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useBombFinance from '../../hooks/useBombFinance';\n//import { ReactComponent as IconTelegram } from '../../assets/img/telegram.svg';\nimport { Helmet } from 'react-helmet';\nimport BombImage from '../../assets/img/bomb.png';\n\n//import useBombMaxiStats from '../../hooks/useBombMaxiStats';\n\nimport HomeImage from '../../assets/img/background.jpg';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\nconst TITLE = 'bomb.money | BTC pegged algocoin';\n\n// const BackgroundImage = createGlobalStyle`\n//   body {\n//     background-color: grey;\n//     background-size: cover !important;\n//   }\n// `;\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    [theme.breakpoints.down('415')]: {\n      // marginTop: '10px'\n    },\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const TVL = useTotalValueLocked();\n  const bombFtmLpStats = useLpStatsBTC('BOMB-BTCB-LP');\n  const bShareFtmLpStats = useLpStats('BSHARE-BNB-LP');\n  const bombStats = useBombStats();\n  const bShareStats = usebShareStats();\n  const tBondStats = useBondStats();\n  const bombFinance = useBombFinance();\n  // const bombmaxi = useBombMaxiStats('0xd6f52e8ab206e59a1e13b3d6c5b7f31e90ef46ef000200000000000000000028');\n\n  // console.log(bombmaxi);\n  // let bomb;\n  // if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  //   bomb = bombTesting;\n  // } else {\n  //   bomb = bombProd;\n  // }\n\n  const buyBombAddress = //'https://app.1inch.io/#/56/swap/BTCB/BOMB';\n    //  'https://pancakeswap.finance/swap?inputCurrency=0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c&outputCurrency=' +\n    'https://app.bogged.finance/bsc/swap?tokenIn=0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c&tokenOut=0x522348779DCb2911539e76A1042aA922F9C47Ee3';\n  //https://pancakeswap.finance/swap?outputCurrency=0x531780FAcE85306877D7e1F05d713D1B50a37F7A';\n  const buyBShareAddress = //'https://app.1inch.io/#/56/swap/BNB/BSHARE';\n    'https://app.bogged.finance/bsc/swap?tokenIn=BNB&tokenOut=0x531780FAcE85306877D7e1F05d713D1B50a37F7A';\n  const buyBusmAddress =\n    'https://app.bogged.finance/bsc/swap?tokenIn=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56&tokenOut=0x6216B17f696B14701E17BCB24Ec14430261Be94A';\n  const bombLPStats = useMemo(() => (bombFtmLpStats ? bombFtmLpStats : null), [bombFtmLpStats]);\n  const bshareLPStats = useMemo(() => (bShareFtmLpStats ? bShareFtmLpStats : null), [bShareFtmLpStats]);\n  const bombPriceInDollars = useMemo(\n    () => (bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null),\n    [bombStats],\n  );\n  const bombPriceInBNB = useMemo(() => (bombStats ? Number(bombStats.tokenInFtm).toFixed(4) : null), [bombStats]);\n  const bombCirculatingSupply = useMemo(() => (bombStats ? String(bombStats.circulatingSupply) : null), [bombStats]);\n  const bombTotalSupply = useMemo(() => (bombStats ? String(bombStats.totalSupply) : null), [bombStats]);\n\n  const bSharePriceInDollars = useMemo(\n    () => (bShareStats ? Number(bShareStats.priceInDollars).toFixed(2) : null),\n    [bShareStats],\n  );\n  const bSharePriceInBNB = useMemo(\n    () => (bShareStats ? Number(bShareStats.tokenInFtm).toFixed(4) : null),\n    [bShareStats],\n  );\n  const bShareCirculatingSupply = useMemo(\n    () => (bShareStats ? String(bShareStats.circulatingSupply) : null),\n    [bShareStats],\n  );\n  const bShareTotalSupply = useMemo(() => (bShareStats ? String(bShareStats.totalSupply) : null), [bShareStats]);\n\n  const tBondPriceInDollars = useMemo(\n    () => (tBondStats ? Number(tBondStats.priceInDollars).toFixed(2) : null),\n    [tBondStats],\n  );\n  const tBondPriceInBNB = useMemo(() => (tBondStats ? Number(tBondStats.tokenInFtm).toFixed(4) : null), [tBondStats]);\n  const tBondCirculatingSupply = useMemo(\n    () => (tBondStats ? String(tBondStats.circulatingSupply) : null),\n    [tBondStats],\n  );\n  const tBondTotalSupply = useMemo(() => (tBondStats ? String(tBondStats.totalSupply) : null), [tBondStats]);\n\n  const bombLpZap = useZap({ depositTokenName: 'BOMB-BTCB-LP' });\n  const bshareLpZap = useZap({ depositTokenName: 'BSHARE-BNB-LP' });\n\n  const [onPresentBombZap, onDissmissBombZap] = useModal(\n    <ZapModal\n      decimals={18}\n      onConfirm={(zappingToken, tokenName, amount) => {\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\n        bombLpZap.onZap(zappingToken, tokenName, amount);\n        onDissmissBombZap();\n      }}\n      tokenName={'BOMB-BTCB-LP'}\n    />,\n  );\n\n  const [onPresentBshareZap, onDissmissBshareZap] = useModal(\n    <ZapModal\n      decimals={18}\n      onConfirm={(zappingToken, tokenName, amount) => {\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\n        bshareLpZap.onZap(zappingToken, tokenName, amount);\n        onDissmissBshareZap();\n      }}\n      tokenName={'BSHARE-BNB-LP'}\n    />,\n  );\n\n  const [modal, setModal] = useState(false);\n  const [videoLoading, setVideoLoading] = useState(true);\n\n  const openModal = () => {\n    setModal(!modal);\n  };\n\n  const spinner = () => {\n    setVideoLoading(!videoLoading);\n  };\n\n  // const [onPresentIntroVid] = useModal(\n  //   <grid>\n  //     <Paper>\n  //       <div>\n  //         <iframe\n  //           width=\"560\"\n  //           height=\"315\"\n  //           src=\"https://www.youtube.com/embed/nhCWmmRNNhc\"\n  //           title=\"YouTube video player\"\n  //           frameborder=\"0\"\n  //           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n  //           allowfullscreen\n  //         ></iframe>\n  //       </div>\n  //     </Paper>\n  //   </grid>,\n  // );\n\n  return (\n    <Page>\n      <Helmet>\n        <title>{TITLE}</title>\n      </Helmet>\n      <BackgroundImage />\n      <Grid container spacing={3}>\n        {/* Logo */}\n        <Grid\n          item\n          xs={12}\n          sm={4}\n          style={{ display: 'flex', justifyContent: 'center', verticalAlign: 'middle', overflow: 'hidden' }}\n        >\n          <img src={BombImage} alt=\"Bomb.money\" style={{ maxHeight: '240px' }} />\n        </Grid>\n        {/* Explanation text */}\n        <Grid item xs={12} sm={8}>\n          <Paper>\n            <Box p={4} style={{ textAlign: 'center' }}>\n              <h1>BOMB: BITCOIN SAFETY + DEFI YIELDS</h1>\n              <p>\n                <strong>BOMB is pegged via algorithm to a 10,000:1 ratio to BTC. $100k BTC = $10 BOMB PEG</strong>\n              </p>\n              <p>\n                <h2>Best Algocoin | 0.5%+ DAILY | Audited | Doxxed team</h2>\n                {/* Stake your BOMB-BTC LP in the Farm to earn BSHARE rewards. Then stake your earned BSHARE in the\n                Boardroom to earn more BOMB! */}\n              </p>\n              <p>\n                {/* <IconTelegram alt=\"telegram\" style={{ fill: '#dddfee', height: '15px' }} /> */}\n                Join our{' '}\n                <a\n                  href=\"https://t.me/bombmoneybsc\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  style={{ color: '#dddfee' }}\n                >\n                  Telegram\n                </a>{' '}\n                or{' '}\n                <a\n                  href=\"https://discord.bomb.money\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  style={{ color: '#dddfee' }}\n                >\n                  Discord\n                </a>{' '}\n                to find out more!\n              </p>\n\n              <button onClick={openModal} className=\"shinyButtonSecondary\">\n                Learn about BOMB\n                {modal ? (\n                  <section className=\"modal__bg\">\n                    <div className=\"modal__align\">\n                      <div className=\"modal__content\" modal={modal}>\n                        <IoCloseOutline className=\"modal__close\" arial-label=\"Close modal\" onClick={setModal} />\n                        <div className=\"modal__video-align\">\n                          {videoLoading ? (\n                            <div className=\"modal__spinner\">\n                              {' '}\n                              <BiLoaderAlt className=\"modal__spinner-style\" fadeIn=\"none\" />\n                            </div>\n                          ) : null}\n                          <iframe\n                            className=\"modal__video-style\"\n                            onLoad={spinner}\n                            loading=\"lazy\"\n                            width=\"800\"\n                            height=\"500\"\n                            src=\"https://www.youtube.com/embed/nhCWmmRNNhc\"\n                            title=\"BOMB Intro Video\"\n                            frameBorder=\"0\"\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullscreen\n                          ></iframe>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                ) : null}\n              </button>\n            </Box>\n          </Paper>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12} justify=\"center\" style={{ margin: '12px', display: 'flex' }}>\n            <Alert variant=\"filled\" severity=\"info\">\n              <h2>BOMB Cycle: Guide to Indefinite Printing</h2>\n              <b>How to maximize earnings while keeping BOMB printing!</b>{' '}\n              <Button\n                href=\"https://bombbshare.medium.com/the-bomb-cycle-how-to-print-forever-e89dc82c12e5\"\n                target={'_blank'}\n                className=\"shinyButton\"\n                style={{ margin: '10px' }}\n              >\n                READ ARTICLE\n              </Button>\n            </Alert>\n          </Grid>\n        </Grid>\n\n        {/* TVL */}\n        <Grid item xs={12} sm={4}>\n          <Card style={{'paddingTop': '10px'}}>\n            <CardContent align=\"center\">\n              <h2>Total Value Locked</h2>\n              <CountUp style={{ fontSize: '25px' }} end={TVL} separator=\",\" prefix=\"$\" />\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Wallet */}\n        <Grid item xs={12} sm={8}>\n          <Card style={{ height: '100%' }}>\n            <CardContent align=\"center\" style={{ marginTop: '2.5%' }}>\n              {/* <h2 style={{ marginBottom: '20px' }}>Wallet Balance</h2> */}\n              <Button href=\"https://bomb.farm/\" className=\"shinyButtonGreen\" style={{ margin: '5px' }}>\n                Autovaults\n              </Button>\n              <Button\n                href={buyBombAddress}\n                style={{ margin: '5px' }}\n                target=\"_blank\"\n                className={'shinyButton ' + classes.button}\n              >\n                Buy BOMB\n              </Button>\n              <Button\n                href={buyBShareAddress}\n                className={'shinyButton ' + classes.button}\n                target=\"_blank\"\n                style={{ margin: '5px' }}\n              >\n                Buy BSHARE\n              </Button>\n              <Button\n                href={buyBusmAddress}\n                className={'shinyButton ' + classes.button}\n                target=\"_blank\"\n                style={{ margin: '5px' }}\n              >\n                Buy BUSM\n              </Button>\n              <Button\n                target=\"_blank\"\n                href=\"https://dexscreener.com/bsc/0x84392649eb0bc1c1532f2180e58bae4e1dabd8d6\"\n                className=\"shinyButton\"\n                style={{ margin: '5px' }}\n              >\n                BOMB Chart\n              </Button>\n              <Button\n                target=\"_blank\"\n                href=\"https://dexscreener.com/bsc/0x1303246855b5b5ebc71f049fdb607494e97218f8\"\n                className=\"shinyButton\"\n                style={{ margin: '5px' }}\n              >\n                BSHARE Chart\n              </Button>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* BOMB */}\n        <Grid item xs={12} sm={4}>\n          <Card>\n            <CardContent align=\"center\" style={{ position: 'relative' }}>\n              <Box mt={2}>\n                <CardIcon>\n                  <TokenSymbol symbol=\"BOMB\" />\n                </CardIcon>\n              </Box>\n              <Button\n                onClick={() => {\n                  bombFinance.watchAssetInMetamask('BOMB');\n                }}\n                style={{ position: 'absolute', top: '10px', right: '10px', border: '1px grey solid' }}\n              >\n                {' '}\n                <b>+</b>&nbsp;&nbsp;\n                <img alt=\"metamask fox\" style={{ width: '20px', filter: 'grayscale(100%)' }} src={MetamaskFox} />\n              </Button>\n              <h2 style={{ marginBottom: '10px' }}>BOMB</h2>\n              10,000 BOMB (1.0 Peg) =\n              <Box>\n                <span style={{ fontSize: '30px', color: 'white' }}>\n                  {bombPriceInBNB ? bombPriceInBNB : '-.----'} BTC\n                </span>\n              </Box>\n              <Box>\n                <span style={{ fontSize: '16px', alignContent: 'flex-start' }}>\n                  ${bombPriceInDollars ? roundAndFormatNumber(bombPriceInDollars, 2) : '-.--'} / BOMB\n                </span>\n              </Box>\n              <span style={{ fontSize: '12px' }}>\n                Market Cap: ${roundAndFormatNumber(bombCirculatingSupply * bombPriceInDollars, 2)} <br />\n                Circulating Supply: {roundAndFormatNumber(bombCirculatingSupply, 2)} <br />\n                Total Supply: {roundAndFormatNumber(bombTotalSupply, 2)}\n              </span>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* BSHARE */}\n        <Grid item xs={12} sm={4}>\n          <Card>\n            <CardContent align=\"center\" style={{ position: 'relative' }}>\n              <Button\n                onClick={() => {\n                  bombFinance.watchAssetInMetamask('BSHARE');\n                }}\n                style={{ position: 'absolute', top: '10px', right: '10px', border: '1px grey solid' }}\n              >\n                {' '}\n                <b>+</b>&nbsp;&nbsp;\n                <img alt=\"metamask fox\" style={{ width: '20px', filter: 'grayscale(100%)' }} src={MetamaskFox} />\n              </Button>\n              <Box mt={2}>\n                <CardIcon>\n                  <TokenSymbol symbol=\"BSHARE\" />\n                </CardIcon>\n              </Box>\n              <h2 style={{ marginBottom: '10px' }}>BSHARE</h2>\n              Current Price\n              <Box>\n                <span style={{ fontSize: '30px', color: 'white' }}>\n                  {bSharePriceInBNB ? bSharePriceInBNB : '-.----'} BNB\n                </span>\n              </Box>\n              <Box>\n                <span style={{ fontSize: '16px' }}>\n                  ${bSharePriceInDollars ? bSharePriceInDollars : '-.--'} / BSHARE\n                </span>\n              </Box>\n              <span style={{ fontSize: '12px' }}>\n                Market Cap: ${roundAndFormatNumber((bShareCirculatingSupply * bSharePriceInDollars).toFixed(2), 2)}{' '}\n                <br />\n                Circulating Supply: {roundAndFormatNumber(bShareCirculatingSupply, 2)} <br />\n                Total Supply: {roundAndFormatNumber(bShareTotalSupply, 2)}\n              </span>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* BBOND */}\n        <Grid item xs={12} sm={4}>\n          <Card>\n            <CardContent align=\"center\" style={{ position: 'relative' }}>\n              <Button\n                onClick={() => {\n                  bombFinance.watchAssetInMetamask('BBOND');\n                }}\n                style={{ position: 'absolute', top: '10px', right: '10px', border: '1px grey solid' }}\n              >\n                {' '}\n                <b>+</b>&nbsp;&nbsp;\n                <img alt=\"metamask fox\" style={{ width: '20px', filter: 'grayscale(100%)' }} src={MetamaskFox} />\n              </Button>\n              <Box mt={2}>\n                <CardIcon>\n                  <TokenSymbol symbol=\"BBOND\" />\n                </CardIcon>\n              </Box>\n              <h2 style={{ marginBottom: '10px' }}>BBOND</h2>\n              10,000 BBOND\n              <Box>\n                <span style={{ fontSize: '30px', color: 'white' }}>\n                  {tBondPriceInBNB ? tBondPriceInBNB : '-.----'} BTC\n                </span>\n              </Box>\n              <Box>\n                <span style={{ fontSize: '16px' }}>${tBondPriceInDollars ? tBondPriceInDollars : '-.--'} / BBOND</span>\n              </Box>\n              <span style={{ fontSize: '12px' }}>\n                Market Cap: ${roundAndFormatNumber((tBondCirculatingSupply * tBondPriceInDollars).toFixed(2), 2)} <br />\n                Circulating Supply: {roundAndFormatNumber(tBondCirculatingSupply, 2)} <br />\n                Total Supply: {roundAndFormatNumber(tBondTotalSupply, 2)}\n              </span>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Card>\n            <CardContent align=\"center\">\n              <Box mt={2}>\n                <CardIcon>\n                  <TokenSymbol symbol=\"BOMB-BTCB-LP\" />\n                </CardIcon>\n              </Box>\n              <h2>BOMB-BTCB PancakeSwap LP</h2>\n              <Box mt={2}>\n                <Button disabled onClick={onPresentBombZap} className=\"shinyButtonDisabledSecondary\">\n                  Zap In\n                </Button>\n              </Box>\n              <Box mt={2}>\n                <span style={{ fontSize: '26px' }}>\n                  {bombLPStats?.tokenAmount ? bombLPStats?.tokenAmount : '-.--'} BOMB /{' '}\n                  {bombLPStats?.ftmAmount ? bombLPStats?.ftmAmount : '-.--'} BTCB\n                </span>\n              </Box>\n              <Box>${bombLPStats?.priceOfOne ? bombLPStats.priceOfOne : '-.--'}</Box>\n              <span style={{ fontSize: '12px' }}>\n                Liquidity: ${bombLPStats?.totalLiquidity ? roundAndFormatNumber(bombLPStats.totalLiquidity, 2) : '-.--'}{' '}\n                <br />\n                Total Supply: {bombLPStats?.totalSupply ? roundAndFormatNumber(bombLPStats.totalSupply, 2) : '-.--'}\n              </span>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Card>\n            <CardContent align=\"center\">\n              <Box mt={2}>\n                <CardIcon>\n                  <TokenSymbol symbol=\"BSHARE-BNB-LP\" />\n                </CardIcon>\n              </Box>\n              <h2>BSHARE-BNB PancakeSwap LP</h2>\n              <Box mt={2}>\n                <Button onClick={onPresentBshareZap} className=\"shinyButtonSecondary\">\n                  Zap In\n                </Button>\n              </Box>\n              <Box mt={2}>\n                <span style={{ fontSize: '26px' }}>\n                  {bshareLPStats?.tokenAmount ? bshareLPStats?.tokenAmount : '-.--'} BSHARE /{' '}\n                  {bshareLPStats?.ftmAmount ? bshareLPStats?.ftmAmount : '-.--'} BNB\n                </span>\n              </Box>\n              <Box>${bshareLPStats?.priceOfOne ? bshareLPStats.priceOfOne : '-.--'}</Box>\n              <span style={{ fontSize: '12px' }}>\n                Liquidity: $\n                {bshareLPStats?.totalLiquidity ? roundAndFormatNumber(bshareLPStats.totalLiquidity, 2) : '-.--'}\n                <br />\n                Total Supply: {bshareLPStats?.totalSupply ? roundAndFormatNumber(bshareLPStats.totalSupply, 2) : '-.--'}\n              </span>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Page>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}