{"version":3,"sources":["components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","components/CardIcon/CardIcon.tsx","components/Value/Value.tsx","components/Icon/Icon.tsx","components/icons/AddIcon.tsx","components/icons/RemoveIcon.tsx","components/IconButton/IconButton.tsx","components/Spacer/Spacer.tsx","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","hooks/useStakedTokenPriceInDollars.ts","hooks/boardroom/useClaimRewardTimerBoardroom.ts","views/Boardroom/components/Harvest.tsx","hooks/boardroom/useWithdrawCheck.ts","views/Boardroom/components/DepositModal.tsx","views/Boardroom/components/WithdrawModal.tsx","hooks/boardroom/useUnstakeTimerBoardroom.ts","hooks/useStakeToBoardroom.ts","hooks/useWithdrawFromBoardroom.ts","views/Boardroom/components/Stake.tsx","views/Boardroom/Boardroom.js"],"names":["StyledInputWrapper","styled","div","props","theme","color","grey","borderRadius","spacing","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","TokenInput","max","symbol","onSelectMax","toLocaleString","Button","size","variant","onClick","StyledModalActions","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledCardIcon","CardIcon","StyledValue","Value","StyledIcon","Icon","AddIcon","themeColor","useContext","ThemeContext","height","viewBox","width","d","fill","RemoveIcon","StyledButton","button","disabled","undefined","StyledLink","Link","IconButton","to","Spacer","s","Card","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","createSvgIcon","defaultIconMapping","success","SuccessOutlinedIcon","fontSize","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","Alert","action","_props$closeText","closeText","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","_props$variant","square","concat","capitalize","message","title","getColor","palette","type","darken","lighten","getBackgroundColor","typography","body2","shape","backgroundColor","display","padding","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","alignItems","marginLeft","paddingLeft","CardContent","_props$component","component","Component","paddingBottom","useStakedTokenPriceInDollars","stakedTokenName","stakedToken","useState","stakedTokenPriceInDollars","setStakedTokenPriceInDollars","bombFinance","useBombFinance","isUnlocked","fetchBalance","useCallback","a","getDepositTokenPriceInDollars","balance","useEffect","catch","err","console","stack","refreshStakedTokenPriceInDollars","setInterval","config","refreshInterval","clearInterval","useClaimRewardTimerBoardroom","from","Date","time","setTime","getUserClaimRewardTime","then","StyledCardHeader","StyledCardActions","StyledCardContentInner","Harvest","bombStats","useBombStats","onReward","useHarvestFromBoardroom","earnings","useEarningsOnBoardroom","canClaimReward","useClaimRewardCheck","tokenPriceInDollars","useMemo","Number","priceInDollars","toFixed","earnedInDollars","getDisplayBalance","Box","TokenSymbol","Label","text","eq","mt","style","Typography","textAlign","ProgressCountdown","hideBar","base","deadline","description","useWithdrawCheck","canWithdraw","setCanWithdraw","slowRefresh","useRefresh","canUserUnstakeFromBoardroom","canUserWithdraw","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","fullBalance","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","Modal","ModalTitle","WithdrawModal","useUnstakeTimerBoardroom","getUserUnstakeTime","useStakeToBoardroom","handleTransactionReceipt","useHandleTransactionReceipt","onStake","amount","stakeShareToBoardroom","useWithdrawFromBoardroom","onWithdraw","withdrawShareFromBoardroom","StyledActionSpacer","Stake","useApprove","BSHARE","contracts","Boardroom","address","approveStatus","approve","tokenBalance","useTokenBalance","stakedBalance","useStakedBalanceOnBoardroom","toString","canWithdrawFromBoardroom","useModal","onDismissDeposit","onPresentDeposit","onDismissWithdraw","onPresentWithdraw","ApprovalState","APPROVED","NOT_APPROVED","marginTop","BackgroundImage","createGlobalStyle","HomeImage","useStyles","makeStyles","gridItem","breakpoints","up","StyledBoardroom","StyledCardsWrapper","StyledCardWrapper","account","useWallet","onRedeem","useRedeemOnBoardroom","currentEpoch","useCurrentEpoch","cashStat","useCashPriceInEstimatedTWAP","totalStaked","useTotalStakedOnBoardroom","boardroomAPR","useFetchBoardroomAPR","scalingFactor","useTreasuryAllocationTimes","Page","Helmet","align","gutterBottom","Grid","container","justify","item","xs","md","lg","textTransform","moment","toDate","href","UnlockWallet"],"mappings":"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","file":"static/js/12.28920869.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  startAdornment?: React.ReactNode;\n  value: string;\n}\n\nconst Input: React.FC<InputProps> = ({endAdornment, onChange, placeholder, startAdornment, value}) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  );\n};\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[200]};\n  border-radius: ${(props) => props.theme.borderRadius}px;\n  display: flex;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledInput = styled.input`\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.color.grey[600]};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Button} from '@material-ui/core';\nimport Input, {InputProps} from '../Input';\n\ninterface TokenInputProps extends InputProps {\n  max: number | string;\n  symbol: string;\n  onSelectMax?: () => void;\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({max, symbol, onChange, onSelectMax, value}) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} Available\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\n            <StyledSpacer />\n            <div>\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  );\n};\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`;\n\nexport default TokenInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalActions: React.FC = ({children}) => {\n  const l = React.Children.toArray(children).length;\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <StyledSpacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  );\n};\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[100]}00;\n  display: flex;\n  height: 96px;\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\n    ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ModalActions;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface CardIconProps {\n  children?: React.ReactNode;\n}\n\nconst CardIcon: React.FC<CardIconProps> = ({children}) => <StyledCardIcon>{children}</StyledCardIcon>;\n\nconst StyledCardIcon = styled.div`\n  background-color: #363746;\n  font-size: 36px;\n  height: 95px;\n  width: 95px;\n  border-radius: 95px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto ${(props) => props.theme.spacing[3]}px;\n`;\n\nexport default CardIcon;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\ninterface ValueProps {\n  value: string;\n}\n\nconst Value: React.FC<ValueProps> = ({value}) => {\n  return <StyledValue>{value}</StyledValue>;\n};\n\nconst StyledValue = styled.div`\n  font-size: 36px;\n  font-weight: 700;\n`;\n\nexport default Value;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface IconProps {\n  color?: string;\n  children?: string;\n}\n\nconst Icon: React.FC = ({children}) => <StyledIcon>{children}</StyledIcon>;\n\nconst StyledIcon = styled.div``;\n\nexport default Icon;\n","import React, {useContext} from 'react';\nimport {ThemeContext} from 'styled-components';\n\nimport Icon, {IconProps} from '../Icon';\n\nconst AddIcon: React.FC<IconProps> = ({color}) => {\n  const {color: themeColor} = useContext(ThemeContext);\n  return (\n    <Icon>\n      <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" fill={color ? color : themeColor.grey[400]} />\n      </svg>\n    </Icon>\n  );\n};\n\nexport default AddIcon;\n","import React, {useContext} from 'react';\nimport {ThemeContext} from 'styled-components';\n\nimport Icon, {IconProps} from '../Icon';\n\nconst RemoveIcon: React.FC<IconProps> = ({color}) => {\n  const {color: themeColor} = useContext(ThemeContext);\n  return (\n    <Icon>\n      <svg viewBox=\"0 0 24 24\" fill={color ? color : themeColor.grey[400]} width=\"18px\" height=\"18px\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 13H5v-2h14v2z\" />\n      </svg>\n    </Icon>\n  );\n};\n\nexport default RemoveIcon;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Link} from 'react-router-dom';\n\ninterface IconButtonProps {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  onClick?: () => void;\n  to?: string;\n}\n\nconst IconButton: React.FC<IconButtonProps> = ({children, disabled, onClick, to}) => {\n  return (\n    <StyledButton disabled={disabled} onClick={onClick}>\n      {!!to ? <StyledLink to={to}>{children}</StyledLink> : children}\n    </StyledButton>\n  );\n};\n\ninterface StyledButtonProps {\n  disabled?: boolean;\n}\n/*\n  box-shadow: 6px 6px 12px ${props => props.theme.color.grey[600]},\n    -12px -12px 24px ${props => props.theme.color.grey[800]}aa;\n */\n\n// background-color: ${(props) => (!props.disabled ? '#571eb1' : props.theme.color.grey[900])};\n// color: ${(props) => (!props.disabled ? props.theme.color.primary.main : props.theme.color.grey[500])};\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  border: 2px solid;\n  border-radius: 28px;\n  background-color: #171923;\n  box-shadow: ${(props) => ('0px 0px 5px 0px ' + !props.disabled ? 'rgba(251,221,76,1)' : 'grey' )};\n  color: ${(props) => (!props.disabled ? '#f9d749' : 'grey')};\n  cursor: pointer;\n  display: flex;\n  font-weight: 700;\n  height: 56px;\n  justify-content: center;\n  letter-spacing: 1px;\n  outline: none;\n  padding: 0;\n  margin: 0;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  text-transform: uppercase;\n  width: 56px;\n\n  &:hover {\n    background-color: #f9d749;\n    color: #171923;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default IconButton;\n","import React, {useContext} from 'react';\nimport styled, {ThemeContext} from 'styled-components';\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst Spacer: React.FC<SpacerProps> = ({size = 'md'}) => {\n  const {spacing} = useContext(ThemeContext);\n\n  let s: number;\n  switch (size) {\n    case 'lg':\n      s = spacing[6];\n      break;\n    case 'sm':\n      s = spacing[2];\n      break;\n    case 'md':\n    default:\n      s = spacing[4];\n  }\n\n  return <StyledSpacer size={s} />;\n};\n\ninterface StyledSpacerProps {\n  size: number;\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`;\n\nexport default Spacer;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The action to display. It renders after the message, at the end of the alert.\r\n   */\n  action: PropTypes.node,\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Override the default label for the *close popup* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   */\n  closeText: PropTypes.string,\n\n  /**\r\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\r\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\r\n   * Override the icon displayed before the children.\r\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\r\n   */\n  icon: PropTypes.node,\n\n  /**\r\n   * The component maps the `severity` prop to a range of different icons,\r\n   * for instance success to `<SuccessOutlined>`.\r\n   * If you wish to change this mapping, you can provide your own.\r\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\r\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * The ARIA role attribute of the element.\r\n   */\n  role: PropTypes.string,\n\n  /**\r\n   * The severity of the alert. This defines the color and icon used.\r\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import {useCallback, useEffect, useState} from 'react';\n\nimport useBombFinance from './useBombFinance';\nimport config from '../config';\nimport ERC20 from '../bomb-finance/ERC20';\n\nconst useStakedTokenPriceInDollars = (stakedTokenName: string, stakedToken: ERC20) => {\n  const [stakedTokenPriceInDollars, setStakedTokenPriceInDollars] = useState('0');\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await bombFinance.getDepositTokenPriceInDollars(stakedTokenName, stakedToken);\n    setStakedTokenPriceInDollars(balance);\n  }, [stakedToken, stakedTokenName, bombFinance]);\n\n  useEffect(() => {\n    if (isUnlocked) {\n      fetchBalance().catch((err) => console.error(err.stack));\n\n      const refreshStakedTokenPriceInDollars = setInterval(fetchBalance, config.refreshInterval);\n      return () => clearInterval(refreshStakedTokenPriceInDollars);\n    }\n  }, [isUnlocked, setStakedTokenPriceInDollars, bombFinance, fetchBalance]);\n\n  return stakedTokenPriceInDollars;\n};\n\nexport default useStakedTokenPriceInDollars;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from '../useBombFinance';\nimport {AllocationTime} from '../../bomb-finance/types';\n\nconst useClaimRewardTimerBoardroom = () => {\n  const [time, setTime] = useState<AllocationTime>({\n    from: new Date(),\n    to: new Date(),\n  });\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    if (bombFinance) {\n      bombFinance.getUserClaimRewardTime().then(setTime);\n    }\n  }, [bombFinance]);\n  return time;\n};\n\nexport default useClaimRewardTimerBoardroom;\n","import React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {Box, Button, Card, CardContent, Typography} from '@material-ui/core';\n\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport CardIcon from '../../../components/CardIcon';\nimport useClaimRewardTimerBoardroom from '../../../hooks/boardroom/useClaimRewardTimerBoardroom';\nimport useClaimRewardCheck from '../../../hooks/boardroom/useClaimRewardCheck';\nimport ProgressCountdown from './ProgressCountdown';\nimport useHarvestFromBoardroom from '../../../hooks/useHarvestFromBoardroom';\nimport useEarningsOnBoardroom from '../../../hooks/useEarningsOnBoardroom';\nimport useBombStats from '../../../hooks/useBombStats';\nimport {getDisplayBalance} from '../../../utils/formatBalance';\n\nconst Harvest: React.FC = () => {\n  const bombStats = useBombStats();\n  const {onReward} = useHarvestFromBoardroom();\n  const earnings = useEarningsOnBoardroom();\n  const canClaimReward = useClaimRewardCheck();\n\n  const tokenPriceInDollars = useMemo(\n    () => (bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null),\n    [bombStats],\n  );\n\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n\n  const {from, to} = useClaimRewardTimerBoardroom();\n\n  return (\n    <Box>\n      <Card>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <CardIcon>\n                <TokenSymbol symbol=\"BOMB\" />\n              </CardIcon>\n              <Value value={getDisplayBalance(earnings)} />\n              <Label text={`≈ $${earnedInDollars}`} variant=\"yellow\" />\n              <Label text=\"BOMB Earned\" variant=\"yellow\" />\n            </StyledCardHeader>\n            <StyledCardActions>\n              <Button\n                onClick={onReward}\n                className={earnings.eq(0) || !canClaimReward ? 'shinyButtonDisabled' : 'shinyButton'}\n                disabled={earnings.eq(0) || !canClaimReward}\n              >\n                Claim Reward\n              </Button>\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      <Box mt={2} style={{color: '#FFF'}}>\n        {canClaimReward ? (\n          ''\n        ) : (\n          <Card>\n            <CardContent>\n              <Typography style={{textAlign: 'center'}}>Claim possible in</Typography>\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Claim available in\" />\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Harvest;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from '../useBombFinance';\nimport useRefresh from '../useRefresh';\n\nconst useWithdrawCheck = () => {\n  const [canWithdraw, setCanWithdraw] = useState(false);\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function canUserWithdraw() {\n      try {\n        setCanWithdraw(await bombFinance.canUserUnstakeFromBoardroom());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (isUnlocked) {\n      canUserWithdraw();\n    }\n  }, [isUnlocked, bombFinance, slowRefresh]);\n\n  return canWithdraw;\n};\n\nexport default useWithdrawCheck;\n","import React, {useCallback, useMemo, useState} from 'react';\n\nimport {Button} from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\n\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\nimport {BigNumber} from 'ethers';\n\ninterface DepositModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  tokenName?: string;\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({max, onConfirm, onDismiss, tokenName = ''}) => {\n  const [val, setVal] = useState('');\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, tokenName === 'USDC' ? 6 : 18);\n  }, [max, tokenName]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value);\n    },\n    [setVal],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={`Deposit ${tokenName}`} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\n          Confirm\n        </Button>\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default DepositModal;\n","import React, {useCallback, useMemo, useState} from 'react';\n\nimport {Button} from '@material-ui/core';\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\n\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\nimport {BigNumber} from 'ethers';\n\ninterface WithdrawModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  tokenName?: string;\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({onConfirm, onDismiss, max, tokenName = ''}) => {\n  const [val, setVal] = useState('');\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max);\n  }, [max]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value);\n    },\n    [setVal],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={`Withdraw ${tokenName}`} />\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\n          Confirm\n        </Button>\n        {/* <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} /> */}\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default WithdrawModal;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from '../useBombFinance';\nimport {AllocationTime} from '../../bomb-finance/types';\n\nconst useUnstakeTimerBoardroom = () => {\n  const [time, setTime] = useState<AllocationTime>({\n    from: new Date(),\n    to: new Date(),\n  });\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    if (bombFinance) {\n      bombFinance.getUserUnstakeTime().then(setTime);\n    }\n  }, [bombFinance]);\n  return time;\n};\n\nexport default useUnstakeTimerBoardroom;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useStakeToBoardroom = () => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleStake = useCallback(\n    (amount: string) => {\n      handleTransactionReceipt(bombFinance.stakeShareToBoardroom(amount), `Stake ${amount} BSHARE to the boardroom`);\n    },\n    [bombFinance, handleTransactionReceipt],\n  );\n  return {onStake: handleStake};\n};\n\nexport default useStakeToBoardroom;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useWithdrawFromBoardroom = () => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleWithdraw = useCallback(\n    (amount: string) => {\n      handleTransactionReceipt(\n        bombFinance.withdrawShareFromBoardroom(amount),\n        `Withdraw ${amount} BSHARE from the boardroom`,\n      );\n    },\n    [bombFinance, handleTransactionReceipt],\n  );\n  return {onWithdraw: handleWithdraw};\n};\n\nexport default useWithdrawFromBoardroom;\n","import React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {Box, Button, Card, CardContent, Typography} from '@material-ui/core';\n\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport {AddIcon, RemoveIcon} from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\n\nimport useApprove, {ApprovalState} from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdrawCheck from '../../../hooks/boardroom/useWithdrawCheck';\n\nimport {getDisplayBalance} from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useBombFinance from '../../../hooks/useBombFinance';\nimport ProgressCountdown from './ProgressCountdown';\nimport useStakedBalanceOnBoardroom from '../../../hooks/useStakedBalanceOnBoardroom';\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\nimport useUnstakeTimerBoardroom from '../../../hooks/boardroom/useUnstakeTimerBoardroom';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useStakeToBoardroom from '../../../hooks/useStakeToBoardroom';\nimport useWithdrawFromBoardroom from '../../../hooks/useWithdrawFromBoardroom';\n\nconst Stake: React.FC = () => {\n  const bombFinance = useBombFinance();\n  const [approveStatus, approve] = useApprove(bombFinance.BSHARE, bombFinance.contracts.Boardroom.address);\n\n  const tokenBalance = useTokenBalance(bombFinance.BSHARE);\n  const stakedBalance = useStakedBalanceOnBoardroom();\n  const {from, to} = useUnstakeTimerBoardroom();\n\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars('BSHARE', bombFinance.BSHARE);\n  const tokenPriceInDollars = useMemo(\n    () =>\n      stakedTokenPriceInDollars\n        ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString()\n        : null,\n    [stakedTokenPriceInDollars, stakedBalance],\n  );\n  // const isOldBoardroomMember = boardroomVersion !== 'latest';\n\n  const {onStake} = useStakeToBoardroom();\n  const {onWithdraw} = useWithdrawFromBoardroom();\n  const canWithdrawFromBoardroom = useWithdrawCheck();\n\n  const [onPresentDeposit, onDismissDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={(value) => {\n        onStake(value);\n        onDismissDeposit();\n      }}\n      tokenName={'BShare'}\n    />,\n  );\n\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={(value) => {\n        onWithdraw(value);\n        onDismissWithdraw();\n      }}\n      tokenName={'BShare'}\n    />,\n  );\n\n  return (\n    <Box>\n      <Card>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <CardIcon>\n                <TokenSymbol symbol=\"BSHARE\" />\n              </CardIcon>\n              <Value value={getDisplayBalance(stakedBalance)} />\n              <Label text={`≈ $${tokenPriceInDollars}`} variant=\"yellow\" />\n              <Label text={'BSHARE Staked'} variant=\"yellow\" />\n            </StyledCardHeader>\n            <StyledCardActions>\n              {approveStatus !== ApprovalState.APPROVED ? (\n                <Button\n                  disabled={approveStatus !== ApprovalState.NOT_APPROVED}\n                  className={approveStatus === ApprovalState.NOT_APPROVED ? 'shinyButton' : 'shinyButtonDisabled'}\n                  style={{marginTop: '20px'}}\n                  onClick={approve}\n                >\n                  Approve BSHARE\n                </Button>\n              ) : (\n                <>\n                  <IconButton disabled={!canWithdrawFromBoardroom} onClick={onPresentWithdraw}>\n                    <RemoveIcon color={!canWithdrawFromBoardroom ? '' : 'yellow'} />\n                  </IconButton>\n                  <StyledActionSpacer />\n                  <IconButton onClick={onPresentDeposit}>\n                    <AddIcon color={!canWithdrawFromBoardroom ? '' : 'yellow'} />\n                  </IconButton>\n                </>\n              )}\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      <Box mt={2} style={{color: '#FFF'}}>\n        {canWithdrawFromBoardroom ? (\n          ''\n        ) : (\n          <Card>\n            <CardContent>\n              <Typography style={{textAlign: 'center'}}>Withdraw possible in</Typography>\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Withdraw available in\" />\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Stake;\n","import React, { useMemo } from 'react';\nimport { useWallet } from 'use-wallet';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Box, Card, CardContent, Button, Typography, Grid } from '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab';\n\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Page from '../../components/Page';\n\nimport useRedeemOnBoardroom from '../../hooks/useRedeemOnBoardroom';\nimport useStakedBalanceOnBoardroom from '../../hooks/useStakedBalanceOnBoardroom';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport useCurrentEpoch from '../../hooks/useCurrentEpoch';\nimport useFetchBoardroomAPR from '../../hooks/useFetchBoardroomAPR';\n\nimport useCashPriceInEstimatedTWAP from '../../hooks/useCashPriceInEstimatedTWAP';\nimport useTreasuryAllocationTimes from '../../hooks/useTreasuryAllocationTimes';\nimport useTotalStakedOnBoardroom from '../../hooks/useTotalStakedOnBoardroom';\nimport useClaimRewardCheck from '../../hooks/boardroom/useClaimRewardCheck';\nimport useWithdrawCheck from '../../hooks/boardroom/useWithdrawCheck';\nimport ProgressCountdown from './components/ProgressCountdown';\nimport { createGlobalStyle } from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nimport HomeImage from '../../assets/img/background.jpg';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\nconst TITLE = 'bomb.money | Boardroom';\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px',\n    },\n  },\n}));\n\nconst Boardroom = () => {\n  const classes = useStyles();\n  const { account } = useWallet();\n  const { onRedeem } = useRedeemOnBoardroom();\n  const stakedBalance = useStakedBalanceOnBoardroom();\n  const currentEpoch = useCurrentEpoch();\n  const cashStat = useCashPriceInEstimatedTWAP();\n  const totalStaked = useTotalStakedOnBoardroom();\n  const boardroomAPR = useFetchBoardroomAPR();\n  const canClaimReward = useClaimRewardCheck();\n  const canWithdraw = useWithdrawCheck();\n  const scalingFactor = useMemo(() => (cashStat ? Number(cashStat.priceInDollars).toFixed(4) : null), [cashStat]);\n  const { to } = useTreasuryAllocationTimes();\n\n  return (\n    <Page>\n      <BackgroundImage />\n      <Helmet>\n        <title>{TITLE}</title>\n      </Helmet>\n      <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\n        Boardroom\n      </Typography>\n      <Box mt={5}>\n        <Grid container justify=\"center\" spacing={3}>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{ textAlign: 'center' }}>\n                <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>Next Epoch</Typography>\n                <ProgressCountdown base={moment().toDate()} hideBar={true} deadline={to} description=\"Next Epoch\" />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent align=\"center\">\n                <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>Current Epoch</Typography>\n                <Typography>{Number(currentEpoch)}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent align=\"center\">\n                <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>\n                  BOMB PEG <small>(TWAP)</small>\n                </Typography>\n                <Typography>{scalingFactor} BTC</Typography>\n                <Typography>\n                  <small>per 10,000 BOMB</small>\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent align=\"center\">\n                <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>APR</Typography>\n                <Typography>{boardroomAPR.toFixed(2)}%</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2}>\n            <Card className={classes.gridItem}>\n              <CardContent align=\"center\">\n                <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>BSHARES Staked</Typography>\n                <Typography>{getDisplayBalance(totalStaked)}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n\n        <Grid container justify=\"center\">\n          <Box mt={3} style={{ width: '600px' }}>\n            <Alert variant=\"filled\" severity=\"info\">\n              <h2> Let's Maintain PEG Together! </h2>\n              <a href=\"https://app.bomb.money/xbomb\">xBOMB</a> is a great place to put your BOMB rewards , 20% of all\n              minted BOMB goes directly to xBOMB stakers.\n              <br />\n              <br />\n              Please consider putting your earned BOMB into xBOMB, especially when we are not over 1.1 peg.\n            </Alert>\n          </Box>\n        </Grid>\n\n        {!!account ? (\n          <Box mt={4}>\n            <StyledBoardroom>\n              <StyledCardsWrapper>\n                <StyledCardWrapper>\n                  <Harvest />\n                </StyledCardWrapper>\n                <Spacer />\n                <StyledCardWrapper>\n                  <Stake />\n                </StyledCardWrapper>\n              </StyledCardsWrapper>\n            </StyledBoardroom>\n          </Box>\n        ) : (\n          <UnlockWallet />\n        )}\n\n        {/* <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent align=\"center\">\n                  <Typography>Rewards</Typography>\n\n                </CardContent>\n                <CardActions style={{justifyContent: 'center'}}>\n                  <Button color=\"primary\" variant=\"outlined\">Claim Reward</Button>\n                </CardActions>\n                <CardContent align=\"center\">\n                  <Typography>Claim Countdown</Typography>\n                  <Typography>00:00:00</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent align=\"center\">\n                  <Typography>Stakings</Typography>\n                  <Typography>{getDisplayBalance(stakedBalance)}</Typography>\n                </CardContent>\n                <CardActions style={{justifyContent: 'center'}}>\n                  <Button>+</Button>\n                  <Button>-</Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid> */}\n      </Box>\n\n      {!!account && (\n        <Box mt={5}>\n          <Grid container justify=\"center\" spacing={3} mt={10}>\n            <Button\n              disabled={stakedBalance.eq(0) || (!canWithdraw && !canClaimReward)}\n              onClick={onRedeem}\n              className={\n                stakedBalance.eq(0) || (!canWithdraw && !canClaimReward)\n                  ? 'shinyButtonDisabledSecondary'\n                  : 'shinyButtonSecondary'\n              }\n            >\n              Claim &amp; Withdraw\n            </Button>\n          </Grid>\n        </Box>\n      )}\n    </Page>\n  );\n};\n\nconst StyledBoardroom = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nexport default Boardroom;\n"],"sourceRoot":""}